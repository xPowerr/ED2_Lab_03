

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Aug 01 00:05:09 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.40
    22                           ; Generated 04/07/2022 GMT
    23                           ; 
    24                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     008F                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     0105                     	;# 
   120     0107                     	;# 
   121     0108                     	;# 
   122     0109                     	;# 
   123     010C                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     0185                     	;# 
   129     0187                     	;# 
   130     0188                     	;# 
   131     0189                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0008                     	;# 
   143     0009                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000D                     	;# 
   148     000E                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0011                     	;# 
   153     0012                     	;# 
   154     0013                     	;# 
   155     0014                     	;# 
   156     0015                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     001A                     	;# 
   163     001B                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001D                     	;# 
   167     001E                     	;# 
   168     001F                     	;# 
   169     0081                     	;# 
   170     0085                     	;# 
   171     0086                     	;# 
   172     0087                     	;# 
   173     0088                     	;# 
   174     0089                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     008F                     	;# 
   179     0090                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0095                     	;# 
   187     0096                     	;# 
   188     0097                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     0105                     	;# 
   198     0107                     	;# 
   199     0108                     	;# 
   200     0109                     	;# 
   201     010C                     	;# 
   202     010C                     	;# 
   203     010D                     	;# 
   204     010E                     	;# 
   205     010F                     	;# 
   206     0185                     	;# 
   207     0187                     	;# 
   208     0188                     	;# 
   209     0189                     	;# 
   210     018C                     	;# 
   211     018D                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000D                     	;# 
   226     000E                     	;# 
   227     000E                     	;# 
   228     000F                     	;# 
   229     0010                     	;# 
   230     0011                     	;# 
   231     0012                     	;# 
   232     0013                     	;# 
   233     0014                     	;# 
   234     0015                     	;# 
   235     0015                     	;# 
   236     0016                     	;# 
   237     0017                     	;# 
   238     0018                     	;# 
   239     0019                     	;# 
   240     001A                     	;# 
   241     001B                     	;# 
   242     001B                     	;# 
   243     001C                     	;# 
   244     001D                     	;# 
   245     001E                     	;# 
   246     001F                     	;# 
   247     0081                     	;# 
   248     0085                     	;# 
   249     0086                     	;# 
   250     0087                     	;# 
   251     0088                     	;# 
   252     0089                     	;# 
   253     008C                     	;# 
   254     008D                     	;# 
   255     008E                     	;# 
   256     008F                     	;# 
   257     0090                     	;# 
   258     0091                     	;# 
   259     0092                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0094                     	;# 
   264     0095                     	;# 
   265     0096                     	;# 
   266     0097                     	;# 
   267     0098                     	;# 
   268     0099                     	;# 
   269     009A                     	;# 
   270     009B                     	;# 
   271     009C                     	;# 
   272     009D                     	;# 
   273     009E                     	;# 
   274     009F                     	;# 
   275     0105                     	;# 
   276     0107                     	;# 
   277     0108                     	;# 
   278     0109                     	;# 
   279     010C                     	;# 
   280     010C                     	;# 
   281     010D                     	;# 
   282     010E                     	;# 
   283     010F                     	;# 
   284     0185                     	;# 
   285     0187                     	;# 
   286     0188                     	;# 
   287     0189                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290     0000                     	;# 
   291     0001                     	;# 
   292     0002                     	;# 
   293     0003                     	;# 
   294     0004                     	;# 
   295     0005                     	;# 
   296     0006                     	;# 
   297     0007                     	;# 
   298     0008                     	;# 
   299     0009                     	;# 
   300     000A                     	;# 
   301     000B                     	;# 
   302     000C                     	;# 
   303     000D                     	;# 
   304     000E                     	;# 
   305     000E                     	;# 
   306     000F                     	;# 
   307     0010                     	;# 
   308     0011                     	;# 
   309     0012                     	;# 
   310     0013                     	;# 
   311     0014                     	;# 
   312     0015                     	;# 
   313     0015                     	;# 
   314     0016                     	;# 
   315     0017                     	;# 
   316     0018                     	;# 
   317     0019                     	;# 
   318     001A                     	;# 
   319     001B                     	;# 
   320     001B                     	;# 
   321     001C                     	;# 
   322     001D                     	;# 
   323     001E                     	;# 
   324     001F                     	;# 
   325     0081                     	;# 
   326     0085                     	;# 
   327     0086                     	;# 
   328     0087                     	;# 
   329     0088                     	;# 
   330     0089                     	;# 
   331     008C                     	;# 
   332     008D                     	;# 
   333     008E                     	;# 
   334     008F                     	;# 
   335     0090                     	;# 
   336     0091                     	;# 
   337     0092                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0093                     	;# 
   341     0094                     	;# 
   342     0095                     	;# 
   343     0096                     	;# 
   344     0097                     	;# 
   345     0098                     	;# 
   346     0099                     	;# 
   347     009A                     	;# 
   348     009B                     	;# 
   349     009C                     	;# 
   350     009D                     	;# 
   351     009E                     	;# 
   352     009F                     	;# 
   353     0105                     	;# 
   354     0107                     	;# 
   355     0108                     	;# 
   356     0109                     	;# 
   357     010C                     	;# 
   358     010C                     	;# 
   359     010D                     	;# 
   360     010E                     	;# 
   361     010F                     	;# 
   362     0185                     	;# 
   363     0187                     	;# 
   364     0188                     	;# 
   365     0189                     	;# 
   366     018C                     	;# 
   367     018D                     	;# 
   368     001E                     _ADRESH	set	30
   369     0013                     _SSPBUF	set	19
   370     0014                     _SSPCON	set	20
   371     000B                     _INTCONbits	set	11
   372     000C                     _PIR1bits	set	12
   373     001F                     _ADCON0bits	set	31
   374     0063                     _SSPIF	set	99
   375     009F                     _ADCON1bits	set	159
   376     0094                     _SSPSTATbits	set	148
   377     0094                     _SSPSTAT	set	148
   378     0085                     _TRISAbits	set	133
   379     008C                     _PIE1bits	set	140
   380     043B                     _TRISC3	set	1083
   381     043D                     _TRISC5	set	1085
   382     0189                     _ANSELH	set	393
   383     0188                     _ANSEL	set	392
   384                           
   385                           	psect	cinit
   386     000F                     start_initialization:	
   387                           ; #config settings
   388                           
   389     000F                     __initialization:
   390                           
   391                           ; Clear objects allocated to COMMON
   392     000F  01F6               	clrf	__pbssCOMMON& (0+127)
   393     0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   394     0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   395     0012                     end_of_initialization:	
   396                           ;End of C runtime variable initialization code
   397                           
   398     0012                     __end_of__initialization:
   399     0012  0183               	clrf	3
   400     0013  120A  118A  290F   	ljmp	_main	;jump to C main() function
   401                           
   402                           	psect	bssCOMMON
   403     0076                     __pbssCOMMON:
   404     0076                     _adc_var:
   405     0076                     	ds	2
   406     0078                     _temporal:
   407     0078                     	ds	1
   408                           
   409                           	psect	cstackCOMMON
   410     0070                     __pcstackCOMMON:
   411     0070                     ?_setup:
   412     0070                     ?_spiWrite:	
   413                           ; 1 bytes @ 0x0
   414                           
   415     0070                     ??_spiWrite:	
   416                           ; 1 bytes @ 0x0
   417                           
   418     0070                     ?_main:	
   419                           ; 1 bytes @ 0x0
   420                           
   421     0070                     ?_isr:	
   422                           ; 1 bytes @ 0x0
   423                           
   424     0070                     ?_adc_read:	
   425                           ; 1 bytes @ 0x0
   426                           
   427     0070                     spiWrite@dat:	
   428                           ; 2 bytes @ 0x0
   429                           
   430                           
   431                           ; 1 bytes @ 0x0
   432     0070                     	ds	2
   433     0072                     ??_adc_read:
   434                           
   435                           ; 1 bytes @ 0x2
   436     0072                     	ds	2
   437     0074                     ??_isr:
   438                           
   439                           ; 1 bytes @ 0x4
   440     0074                     	ds	2
   441                           
   442                           	psect	cstackBANK0
   443     0020                     __pcstackBANK0:
   444     0020                     ?_spiInit:
   445     0020                     ?_adc_change_channel:	
   446                           ; 1 bytes @ 0x0
   447                           
   448     0020                     spiInit@sDataSample:	
   449                           ; 1 bytes @ 0x0
   450                           
   451     0020                     adc_change_channel@channel:	
   452                           ; 1 bytes @ 0x0
   453                           
   454                           
   455                           ; 2 bytes @ 0x0
   456     0020                     	ds	1
   457     0021                     spiInit@sClockIdle:
   458                           
   459                           ; 1 bytes @ 0x1
   460     0021                     	ds	1
   461     0022                     ?_adc_init:
   462     0022                     ??_adc_change_channel:	
   463                           ; 1 bytes @ 0x2
   464                           
   465     0022                     spiInit@sTransmitEdge:	
   466                           ; 1 bytes @ 0x2
   467                           
   468     0022                     adc_init@channel:	
   469                           ; 1 bytes @ 0x2
   470                           
   471                           
   472                           ; 2 bytes @ 0x2
   473     0022                     	ds	1
   474     0023                     ??_spiInit:
   475     0023                     spiInit@sType:	
   476                           ; 1 bytes @ 0x3
   477                           
   478                           
   479                           ; 1 bytes @ 0x3
   480     0023                     	ds	1
   481     0024                     ??_setup:
   482     0024                     ??_adc_init:	
   483                           ; 1 bytes @ 0x4
   484                           
   485                           
   486                           ; 1 bytes @ 0x4
   487     0024                     	ds	1
   488     0025                     ??_main:
   489                           
   490                           ; 1 bytes @ 0x5
   491     0025                     	ds	2
   492                           
   493                           	psect	maintext
   494     010F                     __pmaintext:	
   495 ;;
   496 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   497 ;;
   498 ;; *************** function _main *****************
   499 ;; Defined at:
   500 ;;		line 47 in file "main.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, status,2, status,0, pclath, cstack
   509 ;; Tracked objects:
   510 ;;		On entry : B00/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0
   516 ;;      Temps:          0       2       0       0       0
   517 ;;      Totals:         0       2       0       0       0
   518 ;;Total ram usage:        2 bytes
   519 ;; Hardware stack levels required when called: 4
   520 ;; This function calls:
   521 ;;		_adc_init
   522 ;;		_setup
   523 ;; This function is called by:
   524 ;;		Startup code after reset
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528     010F                     _main:	
   529                           ;psect for function _main
   530                           
   531     010F                     l1214:	
   532                           ;incstack = 0
   533                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   534                           
   535                           
   536                           ;main.c: 48:     setup();
   537     010F  120A  118A  21A6  120A  118A  	fcall	_setup
   538                           
   539                           ;main.c: 49:     adc_init(0);
   540     0114  3000               	movlw	0
   541     0115  1283               	bcf	3,5	;RP0=0, select bank0
   542     0116  1303               	bcf	3,6	;RP1=0, select bank0
   543     0117  00A2               	movwf	adc_init@channel
   544     0118  00A3               	movwf	adc_init@channel+1
   545     0119  120A  118A  2165  120A  118A  	fcall	_adc_init
   546     011E                     l1216:
   547                           
   548                           ;main.c: 53:        _delay((unsigned long)((5)*(4000000/4000.0)));
   549     011E  3007               	movlw	7
   550     011F  1283               	bcf	3,5	;RP0=0, select bank0
   551     0120  1303               	bcf	3,6	;RP1=0, select bank0
   552     0121  00A6               	movwf	??_main+1
   553     0122  307C               	movlw	124
   554     0123  00A5               	movwf	??_main
   555     0124                     u677:
   556     0124  0BA5               	decfsz	??_main,f
   557     0125  2924               	goto	u677
   558     0126  0BA6               	decfsz	??_main+1,f
   559     0127  2924               	goto	u677
   560     0128  0000               	nop
   561     0129                     l1218:
   562                           
   563                           ;main.c: 55:        if (ADCON0bits.GO == 0) {
   564     0129  1283               	bcf	3,5	;RP0=0, select bank0
   565     012A  1303               	bcf	3,6	;RP1=0, select bank0
   566     012B  189F               	btfsc	31,1	;volatile
   567     012C  292E               	goto	u661
   568     012D  292F               	goto	u660
   569     012E                     u661:
   570     012E  291E               	goto	l1216
   571     012F                     u660:
   572     012F                     l1220:
   573                           
   574                           ;main.c: 56:             ADCON0bits.GO = 1;
   575     012F  149F               	bsf	31,1	;volatile
   576     0130                     l1222:
   577                           
   578                           ;main.c: 57:             _delay((unsigned long)((50)*(4000000/4000.0)));
   579     0130  3041               	movlw	65
   580     0131  1283               	bcf	3,5	;RP0=0, select bank0
   581     0132  1303               	bcf	3,6	;RP1=0, select bank0
   582     0133  00A6               	movwf	??_main+1
   583     0134  30ED               	movlw	237
   584     0135  00A5               	movwf	??_main
   585     0136                     u687:
   586     0136  0BA5               	decfsz	??_main,f
   587     0137  2936               	goto	u687
   588     0138  0BA6               	decfsz	??_main+1,f
   589     0139  2936               	goto	u687
   590     013A  293B               	nop2
   591     013B  291E               	goto	l1216
   592     013C  120A  118A  280C   	ljmp	start
   593     013F                     __end_of_main:
   594                           
   595                           	psect	text1
   596     01A6                     __ptext1:	
   597 ;; *************** function _setup *****************
   598 ;; Defined at:
   599 ;;		line 76 in file "main.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, status,2, status,0, pclath, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   613 ;;      Params:         0       0       0       0       0
   614 ;;      Locals:         0       0       0       0       0
   615 ;;      Temps:          0       0       0       0       0
   616 ;;      Totals:         0       0       0       0       0
   617 ;;Total ram usage:        0 bytes
   618 ;; Hardware stack levels used: 1
   619 ;; Hardware stack levels required when called: 3
   620 ;; This function calls:
   621 ;;		_spiInit
   622 ;; This function is called by:
   623 ;;		_main
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627     01A6                     _setup:	
   628                           ;psect for function _setup
   629                           
   630     01A6                     l1192:	
   631                           ;incstack = 0
   632                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   633                           
   634                           
   635                           ;main.c: 79:     ANSEL = 0;
   636     01A6  1683               	bsf	3,5	;RP0=1, select bank3
   637     01A7  1703               	bsf	3,6	;RP1=1, select bank3
   638     01A8  0188               	clrf	8	;volatile
   639                           
   640                           ;main.c: 80:     ANSELH = 0;
   641     01A9  0189               	clrf	9	;volatile
   642     01AA                     l1194:
   643                           
   644                           ;main.c: 84:     INTCONbits.GIE = 1;
   645     01AA  178B               	bsf	11,7	;volatile
   646     01AB                     l1196:
   647                           
   648                           ;main.c: 85:     INTCONbits.PEIE = 1;
   649     01AB  170B               	bsf	11,6	;volatile
   650     01AC                     l1198:
   651                           
   652                           ;main.c: 86:     PIR1bits.SSPIF = 0;
   653     01AC  1283               	bcf	3,5	;RP0=0, select bank0
   654     01AD  1303               	bcf	3,6	;RP1=0, select bank0
   655     01AE  118C               	bcf	12,3	;volatile
   656     01AF                     l1200:
   657                           
   658                           ;main.c: 87:     PIE1bits.SSPIE = 1;
   659     01AF  1683               	bsf	3,5	;RP0=1, select bank1
   660     01B0  1303               	bcf	3,6	;RP1=0, select bank1
   661     01B1  158C               	bsf	12,3	;volatile
   662     01B2                     l1202:
   663                           
   664                           ;main.c: 88:     TRISAbits.TRISA5 = 1;
   665     01B2  1685               	bsf	5,5	;volatile
   666     01B3                     l1204:
   667                           
   668                           ;main.c: 89:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   669     01B3  1283               	bcf	3,5	;RP0=0, select bank0
   670     01B4  1303               	bcf	3,6	;RP1=0, select bank0
   671     01B5  01A0               	clrf	spiInit@sDataSample
   672     01B6  01A1               	clrf	spiInit@sClockIdle
   673     01B7  01A2               	clrf	spiInit@sTransmitEdge
   674     01B8  3024               	movlw	36
   675     01B9  120A  118A  2188  120A  118A  	fcall	_spiInit
   676     01BE                     l51:
   677     01BE  0008               	return
   678     01BF                     __end_of_setup:
   679                           
   680                           	psect	text2
   681     0188                     __ptext2:	
   682 ;; *************** function _spiInit *****************
   683 ;; Defined at:
   684 ;;		line 12 in file "SPI.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  sType           1    wreg     enum E1292
   687 ;;  sDataSample     1    0[BANK0 ] enum E1300
   688 ;;  sClockIdle      1    1[BANK0 ] enum E1304
   689 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  sType           1    3[BANK0 ] enum E1292
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   701 ;;      Params:         0       3       0       0       0
   702 ;;      Locals:         0       1       0       0       0
   703 ;;      Temps:          0       0       0       0       0
   704 ;;      Totals:         0       4       0       0       0
   705 ;;Total ram usage:        4 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 2
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_setup
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715     0188                     _spiInit:	
   716                           ;psect for function _spiInit
   717                           
   718                           
   719                           ;incstack = 0
   720                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   721                           ;spiInit@sType stored from wreg
   722     0188  1283               	bcf	3,5	;RP0=0, select bank0
   723     0189  1303               	bcf	3,6	;RP1=0, select bank0
   724     018A  00A3               	movwf	spiInit@sType
   725     018B                     l1098:
   726                           
   727                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   728     018B  1683               	bsf	3,5	;RP0=1, select bank1
   729     018C  1303               	bcf	3,6	;RP1=0, select bank1
   730     018D  1287               	bcf	7,5	;volatile
   731                           
   732                           ;SPI.c: 15:     if(sType & 0b00000100)
   733     018E  1283               	bcf	3,5	;RP0=0, select bank0
   734     018F  1303               	bcf	3,6	;RP1=0, select bank0
   735     0190  1D23               	btfss	spiInit@sType,2
   736     0191  2993               	goto	u511
   737     0192  2994               	goto	u510
   738     0193                     u511:
   739     0193  299A               	goto	l1104
   740     0194                     u510:
   741     0194                     l1100:
   742                           
   743                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   744     0194  0822               	movf	spiInit@sTransmitEdge,w
   745     0195  1683               	bsf	3,5	;RP0=1, select bank1
   746     0196  1303               	bcf	3,6	;RP1=0, select bank1
   747     0197  0094               	movwf	20	;volatile
   748     0198                     l1102:
   749                           
   750                           ;SPI.c: 18:         TRISC3 = 1;
   751     0198  1587               	bsf	7,3	;volatile
   752                           
   753                           ;SPI.c: 19:     }
   754     0199  29A0               	goto	l67
   755     019A                     l1104:
   756                           
   757                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   758     019A  0820               	movf	spiInit@sDataSample,w
   759     019B  0422               	iorwf	spiInit@sTransmitEdge,w
   760     019C  1683               	bsf	3,5	;RP0=1, select bank1
   761     019D  1303               	bcf	3,6	;RP1=0, select bank1
   762     019E  0094               	movwf	20	;volatile
   763     019F                     l1106:
   764                           
   765                           ;SPI.c: 23:         TRISC3 = 0;
   766     019F  1187               	bcf	7,3	;volatile
   767     01A0                     l67:	
   768                           ;SPI.c: 24:     }
   769                           
   770                           
   771                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   772     01A0  1283               	bcf	3,5	;RP0=0, select bank0
   773     01A1  1303               	bcf	3,6	;RP1=0, select bank0
   774     01A2  0823               	movf	spiInit@sType,w
   775     01A3  0421               	iorwf	spiInit@sClockIdle,w
   776     01A4  0094               	movwf	20	;volatile
   777     01A5                     l68:
   778     01A5  0008               	return
   779     01A6                     __end_of_spiInit:
   780                           
   781                           	psect	text3
   782     0165                     __ptext3:	
   783 ;; *************** function _adc_init *****************
   784 ;; Defined at:
   785 ;;		line 15 in file "ADC_setup.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;  channel         2    2[BANK0 ] int 
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg, status,2, status,0, pclath, cstack
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   799 ;;      Params:         0       2       0       0       0
   800 ;;      Locals:         0       0       0       0       0
   801 ;;      Temps:          0       1       0       0       0
   802 ;;      Totals:         0       3       0       0       0
   803 ;;Total ram usage:        3 bytes
   804 ;; Hardware stack levels used: 1
   805 ;; Hardware stack levels required when called: 3
   806 ;; This function calls:
   807 ;;		_adc_change_channel
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813     0165                     _adc_init:	
   814                           ;psect for function _adc_init
   815                           
   816     0165                     l1206:	
   817                           ;incstack = 0
   818                           ; Regs used in _adc_init: [wreg+status,2+status,0+pclath+cstack]
   819                           
   820                           
   821                           ;ADC_setup.c: 17:     PIE1bits.ADIE = 1;
   822     0165  1683               	bsf	3,5	;RP0=1, select bank1
   823     0166  1303               	bcf	3,6	;RP1=0, select bank1
   824     0167  170C               	bsf	12,6	;volatile
   825                           
   826                           ;ADC_setup.c: 18:     PIR1bits.ADIF = 0;
   827     0168  1283               	bcf	3,5	;RP0=0, select bank0
   828     0169  1303               	bcf	3,6	;RP1=0, select bank0
   829     016A  130C               	bcf	12,6	;volatile
   830                           
   831                           ;ADC_setup.c: 20:     ADCON0bits.ADCS1 = 0;
   832     016B  139F               	bcf	31,7	;volatile
   833                           
   834                           ;ADC_setup.c: 21:     ADCON0bits.ADCS0 = 0;
   835     016C  131F               	bcf	31,6	;volatile
   836                           
   837                           ;ADC_setup.c: 23:     ADCON1bits.VCFG1 = 0;
   838     016D  1683               	bsf	3,5	;RP0=1, select bank1
   839     016E  1303               	bcf	3,6	;RP1=0, select bank1
   840     016F  129F               	bcf	31,5	;volatile
   841                           
   842                           ;ADC_setup.c: 24:     ADCON1bits.VCFG0 = 0;
   843     0170  121F               	bcf	31,4	;volatile
   844                           
   845                           ;ADC_setup.c: 26:     ADCON1bits.ADFM = 0;
   846     0171  139F               	bcf	31,7	;volatile
   847     0172                     l1208:
   848                           
   849                           ;ADC_setup.c: 28:     adc_change_channel(channel);
   850     0172  1283               	bcf	3,5	;RP0=0, select bank0
   851     0173  1303               	bcf	3,6	;RP1=0, select bank0
   852     0174  0823               	movf	adc_init@channel+1,w
   853     0175  00A1               	movwf	adc_change_channel@channel+1
   854     0176  0822               	movf	adc_init@channel,w
   855     0177  00A0               	movwf	adc_change_channel@channel
   856     0178  120A  118A  2016  120A  118A  	fcall	_adc_change_channel
   857     017D                     l1210:
   858                           
   859                           ;ADC_setup.c: 30:     ADCON0bits.ADON = 1;
   860     017D  1283               	bcf	3,5	;RP0=0, select bank0
   861     017E  1303               	bcf	3,6	;RP1=0, select bank0
   862     017F  141F               	bsf	31,0	;volatile
   863     0180                     l1212:
   864                           
   865                           ;ADC_setup.c: 31:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   866     0180  3020               	movlw	32
   867     0181  1283               	bcf	3,5	;RP0=0, select bank0
   868     0182  1303               	bcf	3,6	;RP1=0, select bank0
   869     0183  00A4               	movwf	??_adc_init
   870     0184                     u697:
   871     0184  0BA4               	decfsz	??_adc_init,f
   872     0185  2984               	goto	u697
   873     0186  0000               	nop
   874     0187                     l106:
   875     0187  0008               	return
   876     0188                     __end_of_adc_init:
   877                           
   878                           	psect	text4
   879     0016                     __ptext4:	
   880 ;; *************** function _adc_change_channel *****************
   881 ;; Defined at:
   882 ;;		line 38 in file "ADC_setup.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  channel         2    0[BANK0 ] int 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, status,2, status,0
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   896 ;;      Params:         0       2       0       0       0
   897 ;;      Locals:         0       0       0       0       0
   898 ;;      Temps:          0       0       0       0       0
   899 ;;      Totals:         0       2       0       0       0
   900 ;;Total ram usage:        2 bytes
   901 ;; Hardware stack levels used: 1
   902 ;; Hardware stack levels required when called: 2
   903 ;; This function calls:
   904 ;;		Nothing
   905 ;; This function is called by:
   906 ;;		_adc_init
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910     0016                     _adc_change_channel:	
   911                           ;psect for function _adc_change_channel
   912                           
   913     0016                     l1108:	
   914                           ;incstack = 0
   915                           ; Regs used in _adc_change_channel: [wreg+status,2+status,0]
   916                           
   917                           
   918                           ;ADC_setup.c: 39:     if(channel == 0){
   919     0016  1283               	bcf	3,5	;RP0=0, select bank0
   920     0017  1303               	bcf	3,6	;RP1=0, select bank0
   921     0018  0820               	movf	adc_change_channel@channel,w
   922     0019  0421               	iorwf	adc_change_channel@channel+1,w
   923     001A  1D03               	btfss	3,2
   924     001B  281D               	goto	u521
   925     001C  281E               	goto	u520
   926     001D                     u521:
   927     001D  2825               	goto	l1114
   928     001E                     u520:
   929     001E                     l1110:
   930                           
   931                           ;ADC_setup.c: 40:         ADCON0bits.CHS = 0b0000;
   932     001E  30C3               	movlw	-61
   933     001F  059F               	andwf	31,f	;volatile
   934     0020                     l1112:
   935                           
   936                           ;ADC_setup.c: 41:         ANSEL = ANSEL | 0b00000001;
   937     0020  1683               	bsf	3,5	;RP0=1, select bank3
   938     0021  1703               	bsf	3,6	;RP1=1, select bank3
   939     0022  0808               	movf	8,w	;volatile
   940     0023  3801               	iorlw	1
   941     0024  0088               	movwf	8	;volatile
   942     0025                     l1114:
   943                           
   944                           ;ADC_setup.c: 43:     if(channel == 1){
   945     0025  1283               	bcf	3,5	;RP0=0, select bank0
   946     0026  1303               	bcf	3,6	;RP1=0, select bank0
   947     0027  0320               	decf	adc_change_channel@channel,w
   948     0028  0421               	iorwf	adc_change_channel@channel+1,w
   949     0029  1D03               	btfss	3,2
   950     002A  282C               	goto	u531
   951     002B  282D               	goto	u530
   952     002C                     u531:
   953     002C  2836               	goto	l1120
   954     002D                     u530:
   955     002D                     l1116:
   956                           
   957                           ;ADC_setup.c: 44:         ADCON0bits.CHS = 0b0001;
   958     002D  081F               	movf	31,w	;volatile
   959     002E  39C3               	andlw	-61
   960     002F  3804               	iorlw	4
   961     0030  009F               	movwf	31	;volatile
   962     0031                     l1118:
   963                           
   964                           ;ADC_setup.c: 45:         ANSEL = ANSEL | 0b00000010;
   965     0031  1683               	bsf	3,5	;RP0=1, select bank3
   966     0032  1703               	bsf	3,6	;RP1=1, select bank3
   967     0033  0808               	movf	8,w	;volatile
   968     0034  3802               	iorlw	2
   969     0035  0088               	movwf	8	;volatile
   970     0036                     l1120:
   971                           
   972                           ;ADC_setup.c: 47:     if(channel == 2){
   973     0036  3002               	movlw	2
   974     0037  1283               	bcf	3,5	;RP0=0, select bank0
   975     0038  1303               	bcf	3,6	;RP1=0, select bank0
   976     0039  0620               	xorwf	adc_change_channel@channel,w
   977     003A  0421               	iorwf	adc_change_channel@channel+1,w
   978     003B  1D03               	btfss	3,2
   979     003C  283E               	goto	u541
   980     003D  283F               	goto	u540
   981     003E                     u541:
   982     003E  2848               	goto	l1126
   983     003F                     u540:
   984     003F                     l1122:
   985                           
   986                           ;ADC_setup.c: 48:         ADCON0bits.CHS = 0b0010;
   987     003F  081F               	movf	31,w	;volatile
   988     0040  39C3               	andlw	-61
   989     0041  3808               	iorlw	8
   990     0042  009F               	movwf	31	;volatile
   991     0043                     l1124:
   992                           
   993                           ;ADC_setup.c: 49:         ANSEL = ANSEL | 0b00000100;
   994     0043  1683               	bsf	3,5	;RP0=1, select bank3
   995     0044  1703               	bsf	3,6	;RP1=1, select bank3
   996     0045  0808               	movf	8,w	;volatile
   997     0046  3804               	iorlw	4
   998     0047  0088               	movwf	8	;volatile
   999     0048                     l1126:
  1000                           
  1001                           ;ADC_setup.c: 51:     if(channel == 3){
  1002     0048  3003               	movlw	3
  1003     0049  1283               	bcf	3,5	;RP0=0, select bank0
  1004     004A  1303               	bcf	3,6	;RP1=0, select bank0
  1005     004B  0620               	xorwf	adc_change_channel@channel,w
  1006     004C  0421               	iorwf	adc_change_channel@channel+1,w
  1007     004D  1D03               	btfss	3,2
  1008     004E  2850               	goto	u551
  1009     004F  2851               	goto	u550
  1010     0050                     u551:
  1011     0050  285A               	goto	l1132
  1012     0051                     u550:
  1013     0051                     l1128:
  1014                           
  1015                           ;ADC_setup.c: 52:         ADCON0bits.CHS = 0b0011;
  1016     0051  081F               	movf	31,w	;volatile
  1017     0052  39C3               	andlw	-61
  1018     0053  380C               	iorlw	12
  1019     0054  009F               	movwf	31	;volatile
  1020     0055                     l1130:
  1021                           
  1022                           ;ADC_setup.c: 53:         ANSEL = ANSEL | 0b00001000;
  1023     0055  1683               	bsf	3,5	;RP0=1, select bank3
  1024     0056  1703               	bsf	3,6	;RP1=1, select bank3
  1025     0057  0808               	movf	8,w	;volatile
  1026     0058  3808               	iorlw	8
  1027     0059  0088               	movwf	8	;volatile
  1028     005A                     l1132:
  1029                           
  1030                           ;ADC_setup.c: 55:     if(channel == 4){
  1031     005A  3004               	movlw	4
  1032     005B  1283               	bcf	3,5	;RP0=0, select bank0
  1033     005C  1303               	bcf	3,6	;RP1=0, select bank0
  1034     005D  0620               	xorwf	adc_change_channel@channel,w
  1035     005E  0421               	iorwf	adc_change_channel@channel+1,w
  1036     005F  1D03               	btfss	3,2
  1037     0060  2862               	goto	u561
  1038     0061  2863               	goto	u560
  1039     0062                     u561:
  1040     0062  286C               	goto	l1138
  1041     0063                     u560:
  1042     0063                     l1134:
  1043                           
  1044                           ;ADC_setup.c: 56:         ADCON0bits.CHS = 0b0100;
  1045     0063  081F               	movf	31,w	;volatile
  1046     0064  39C3               	andlw	-61
  1047     0065  3810               	iorlw	16
  1048     0066  009F               	movwf	31	;volatile
  1049     0067                     l1136:
  1050                           
  1051                           ;ADC_setup.c: 57:         ANSEL = ANSEL | 0b00010000;
  1052     0067  1683               	bsf	3,5	;RP0=1, select bank3
  1053     0068  1703               	bsf	3,6	;RP1=1, select bank3
  1054     0069  0808               	movf	8,w	;volatile
  1055     006A  3810               	iorlw	16
  1056     006B  0088               	movwf	8	;volatile
  1057     006C                     l1138:
  1058                           
  1059                           ;ADC_setup.c: 59:     if(channel == 5){
  1060     006C  3005               	movlw	5
  1061     006D  1283               	bcf	3,5	;RP0=0, select bank0
  1062     006E  1303               	bcf	3,6	;RP1=0, select bank0
  1063     006F  0620               	xorwf	adc_change_channel@channel,w
  1064     0070  0421               	iorwf	adc_change_channel@channel+1,w
  1065     0071  1D03               	btfss	3,2
  1066     0072  2874               	goto	u571
  1067     0073  2875               	goto	u570
  1068     0074                     u571:
  1069     0074  287E               	goto	l1144
  1070     0075                     u570:
  1071     0075                     l1140:
  1072                           
  1073                           ;ADC_setup.c: 60:         ADCON0bits.CHS = 0b0101;
  1074     0075  081F               	movf	31,w	;volatile
  1075     0076  39C3               	andlw	-61
  1076     0077  3814               	iorlw	20
  1077     0078  009F               	movwf	31	;volatile
  1078     0079                     l1142:
  1079                           
  1080                           ;ADC_setup.c: 61:         ANSEL = ANSEL | 0b00100000;
  1081     0079  1683               	bsf	3,5	;RP0=1, select bank3
  1082     007A  1703               	bsf	3,6	;RP1=1, select bank3
  1083     007B  0808               	movf	8,w	;volatile
  1084     007C  3820               	iorlw	32
  1085     007D  0088               	movwf	8	;volatile
  1086     007E                     l1144:
  1087                           
  1088                           ;ADC_setup.c: 63:     if(channel == 6){
  1089     007E  3006               	movlw	6
  1090     007F  1283               	bcf	3,5	;RP0=0, select bank0
  1091     0080  1303               	bcf	3,6	;RP1=0, select bank0
  1092     0081  0620               	xorwf	adc_change_channel@channel,w
  1093     0082  0421               	iorwf	adc_change_channel@channel+1,w
  1094     0083  1D03               	btfss	3,2
  1095     0084  2886               	goto	u581
  1096     0085  2887               	goto	u580
  1097     0086                     u581:
  1098     0086  2890               	goto	l1150
  1099     0087                     u580:
  1100     0087                     l1146:
  1101                           
  1102                           ;ADC_setup.c: 64:         ADCON0bits.CHS = 0b0110;
  1103     0087  081F               	movf	31,w	;volatile
  1104     0088  39C3               	andlw	-61
  1105     0089  3818               	iorlw	24
  1106     008A  009F               	movwf	31	;volatile
  1107     008B                     l1148:
  1108                           
  1109                           ;ADC_setup.c: 65:         ANSEL = ANSEL | 0b01000000;
  1110     008B  1683               	bsf	3,5	;RP0=1, select bank3
  1111     008C  1703               	bsf	3,6	;RP1=1, select bank3
  1112     008D  0808               	movf	8,w	;volatile
  1113     008E  3840               	iorlw	64
  1114     008F  0088               	movwf	8	;volatile
  1115     0090                     l1150:
  1116                           
  1117                           ;ADC_setup.c: 67:     if(channel == 7){
  1118     0090  3007               	movlw	7
  1119     0091  1283               	bcf	3,5	;RP0=0, select bank0
  1120     0092  1303               	bcf	3,6	;RP1=0, select bank0
  1121     0093  0620               	xorwf	adc_change_channel@channel,w
  1122     0094  0421               	iorwf	adc_change_channel@channel+1,w
  1123     0095  1D03               	btfss	3,2
  1124     0096  2898               	goto	u591
  1125     0097  2899               	goto	u590
  1126     0098                     u591:
  1127     0098  28A2               	goto	l1156
  1128     0099                     u590:
  1129     0099                     l1152:
  1130                           
  1131                           ;ADC_setup.c: 68:         ADCON0bits.CHS = 0b0111;
  1132     0099  081F               	movf	31,w	;volatile
  1133     009A  39C3               	andlw	-61
  1134     009B  381C               	iorlw	28
  1135     009C  009F               	movwf	31	;volatile
  1136     009D                     l1154:
  1137                           
  1138                           ;ADC_setup.c: 69:         ANSEL = ANSEL | 0b10000000;
  1139     009D  1683               	bsf	3,5	;RP0=1, select bank3
  1140     009E  1703               	bsf	3,6	;RP1=1, select bank3
  1141     009F  0808               	movf	8,w	;volatile
  1142     00A0  3880               	iorlw	128
  1143     00A1  0088               	movwf	8	;volatile
  1144     00A2                     l1156:
  1145                           
  1146                           ;ADC_setup.c: 71:     if(channel == 8){
  1147     00A2  3008               	movlw	8
  1148     00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1149     00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1150     00A5  0620               	xorwf	adc_change_channel@channel,w
  1151     00A6  0421               	iorwf	adc_change_channel@channel+1,w
  1152     00A7  1D03               	btfss	3,2
  1153     00A8  28AA               	goto	u601
  1154     00A9  28AB               	goto	u600
  1155     00AA                     u601:
  1156     00AA  28B4               	goto	l1162
  1157     00AB                     u600:
  1158     00AB                     l1158:
  1159                           
  1160                           ;ADC_setup.c: 72:         ADCON0bits.CHS = 0b1000;
  1161     00AB  081F               	movf	31,w	;volatile
  1162     00AC  39C3               	andlw	-61
  1163     00AD  3820               	iorlw	32
  1164     00AE  009F               	movwf	31	;volatile
  1165     00AF                     l1160:
  1166                           
  1167                           ;ADC_setup.c: 73:         ANSELH = ANSELH | 0b00000001;
  1168     00AF  1683               	bsf	3,5	;RP0=1, select bank3
  1169     00B0  1703               	bsf	3,6	;RP1=1, select bank3
  1170     00B1  0809               	movf	9,w	;volatile
  1171     00B2  3801               	iorlw	1
  1172     00B3  0089               	movwf	9	;volatile
  1173     00B4                     l1162:
  1174                           
  1175                           ;ADC_setup.c: 75:     if(channel == 9){
  1176     00B4  3009               	movlw	9
  1177     00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1178     00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1179     00B7  0620               	xorwf	adc_change_channel@channel,w
  1180     00B8  0421               	iorwf	adc_change_channel@channel+1,w
  1181     00B9  1D03               	btfss	3,2
  1182     00BA  28BC               	goto	u611
  1183     00BB  28BD               	goto	u610
  1184     00BC                     u611:
  1185     00BC  28C6               	goto	l1168
  1186     00BD                     u610:
  1187     00BD                     l1164:
  1188                           
  1189                           ;ADC_setup.c: 76:         ADCON0bits.CHS = 0b1001;
  1190     00BD  081F               	movf	31,w	;volatile
  1191     00BE  39C3               	andlw	-61
  1192     00BF  3824               	iorlw	36
  1193     00C0  009F               	movwf	31	;volatile
  1194     00C1                     l1166:
  1195                           
  1196                           ;ADC_setup.c: 77:         ANSELH = ANSELH | 0b00000010;
  1197     00C1  1683               	bsf	3,5	;RP0=1, select bank3
  1198     00C2  1703               	bsf	3,6	;RP1=1, select bank3
  1199     00C3  0809               	movf	9,w	;volatile
  1200     00C4  3802               	iorlw	2
  1201     00C5  0089               	movwf	9	;volatile
  1202     00C6                     l1168:
  1203                           
  1204                           ;ADC_setup.c: 79:     if(channel == 10){
  1205     00C6  300A               	movlw	10
  1206     00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1207     00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1208     00C9  0620               	xorwf	adc_change_channel@channel,w
  1209     00CA  0421               	iorwf	adc_change_channel@channel+1,w
  1210     00CB  1D03               	btfss	3,2
  1211     00CC  28CE               	goto	u621
  1212     00CD  28CF               	goto	u620
  1213     00CE                     u621:
  1214     00CE  28D8               	goto	l1174
  1215     00CF                     u620:
  1216     00CF                     l1170:
  1217                           
  1218                           ;ADC_setup.c: 80:         ADCON0bits.CHS = 0b1010;
  1219     00CF  081F               	movf	31,w	;volatile
  1220     00D0  39C3               	andlw	-61
  1221     00D1  3828               	iorlw	40
  1222     00D2  009F               	movwf	31	;volatile
  1223     00D3                     l1172:
  1224                           
  1225                           ;ADC_setup.c: 81:         ANSELH = ANSELH | 0b00000100;
  1226     00D3  1683               	bsf	3,5	;RP0=1, select bank3
  1227     00D4  1703               	bsf	3,6	;RP1=1, select bank3
  1228     00D5  0809               	movf	9,w	;volatile
  1229     00D6  3804               	iorlw	4
  1230     00D7  0089               	movwf	9	;volatile
  1231     00D8                     l1174:
  1232                           
  1233                           ;ADC_setup.c: 83:     if(channel == 11){
  1234     00D8  300B               	movlw	11
  1235     00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1236     00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1237     00DB  0620               	xorwf	adc_change_channel@channel,w
  1238     00DC  0421               	iorwf	adc_change_channel@channel+1,w
  1239     00DD  1D03               	btfss	3,2
  1240     00DE  28E0               	goto	u631
  1241     00DF  28E1               	goto	u630
  1242     00E0                     u631:
  1243     00E0  28EA               	goto	l1180
  1244     00E1                     u630:
  1245     00E1                     l1176:
  1246                           
  1247                           ;ADC_setup.c: 84:         ADCON0bits.CHS = 0b1011;
  1248     00E1  081F               	movf	31,w	;volatile
  1249     00E2  39C3               	andlw	-61
  1250     00E3  382C               	iorlw	44
  1251     00E4  009F               	movwf	31	;volatile
  1252     00E5                     l1178:
  1253                           
  1254                           ;ADC_setup.c: 85:         ANSELH = ANSELH | 0b00001000;
  1255     00E5  1683               	bsf	3,5	;RP0=1, select bank3
  1256     00E6  1703               	bsf	3,6	;RP1=1, select bank3
  1257     00E7  0809               	movf	9,w	;volatile
  1258     00E8  3808               	iorlw	8
  1259     00E9  0089               	movwf	9	;volatile
  1260     00EA                     l1180:
  1261                           
  1262                           ;ADC_setup.c: 87:     if(channel == 12){
  1263     00EA  300C               	movlw	12
  1264     00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1265     00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1266     00ED  0620               	xorwf	adc_change_channel@channel,w
  1267     00EE  0421               	iorwf	adc_change_channel@channel+1,w
  1268     00EF  1D03               	btfss	3,2
  1269     00F0  28F2               	goto	u641
  1270     00F1  28F3               	goto	u640
  1271     00F2                     u641:
  1272     00F2  28FC               	goto	l1186
  1273     00F3                     u640:
  1274     00F3                     l1182:
  1275                           
  1276                           ;ADC_setup.c: 88:         ADCON0bits.CHS = 0b1100;
  1277     00F3  081F               	movf	31,w	;volatile
  1278     00F4  39C3               	andlw	-61
  1279     00F5  3830               	iorlw	48
  1280     00F6  009F               	movwf	31	;volatile
  1281     00F7                     l1184:
  1282                           
  1283                           ;ADC_setup.c: 89:         ANSELH = ANSELH | 0b00010000;
  1284     00F7  1683               	bsf	3,5	;RP0=1, select bank3
  1285     00F8  1703               	bsf	3,6	;RP1=1, select bank3
  1286     00F9  0809               	movf	9,w	;volatile
  1287     00FA  3810               	iorlw	16
  1288     00FB  0089               	movwf	9	;volatile
  1289     00FC                     l1186:
  1290                           
  1291                           ;ADC_setup.c: 91:     if(channel == 13){
  1292     00FC  300D               	movlw	13
  1293     00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1294     00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1295     00FF  0620               	xorwf	adc_change_channel@channel,w
  1296     0100  0421               	iorwf	adc_change_channel@channel+1,w
  1297     0101  1D03               	btfss	3,2
  1298     0102  2904               	goto	u651
  1299     0103  2905               	goto	u650
  1300     0104                     u651:
  1301     0104  290E               	goto	l126
  1302     0105                     u650:
  1303     0105                     l1188:
  1304                           
  1305                           ;ADC_setup.c: 92:         ADCON0bits.CHS = 0b1101;
  1306     0105  081F               	movf	31,w	;volatile
  1307     0106  39C3               	andlw	-61
  1308     0107  3834               	iorlw	52
  1309     0108  009F               	movwf	31	;volatile
  1310     0109                     l1190:
  1311                           
  1312                           ;ADC_setup.c: 93:         ANSELH = ANSELH | 0b00100000;
  1313     0109  1683               	bsf	3,5	;RP0=1, select bank3
  1314     010A  1703               	bsf	3,6	;RP1=1, select bank3
  1315     010B  0809               	movf	9,w	;volatile
  1316     010C  3820               	iorlw	32
  1317     010D  0089               	movwf	9	;volatile
  1318     010E                     l126:
  1319     010E  0008               	return
  1320     010F                     __end_of_adc_change_channel:
  1321                           
  1322                           	psect	text5
  1323     013F                     __ptext5:	
  1324 ;; *************** function _isr *****************
  1325 ;; Defined at:
  1326 ;;		line 64 in file "main.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;		None
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;		None
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg, status,2, status,0, pclath, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1340 ;;      Params:         0       0       0       0       0
  1341 ;;      Locals:         0       0       0       0       0
  1342 ;;      Temps:          2       0       0       0       0
  1343 ;;      Totals:         2       0       0       0       0
  1344 ;;Total ram usage:        2 bytes
  1345 ;; Hardware stack levels used: 1
  1346 ;; Hardware stack levels required when called: 1
  1347 ;; This function calls:
  1348 ;;		_adc_read
  1349 ;;		_spiWrite
  1350 ;; This function is called by:
  1351 ;;		Interrupt level 1
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355     013F                     _isr:	
  1356                           ;psect for function _isr
  1357                           
  1358     013F                     i1l1086:
  1359                           
  1360                           ;main.c: 65:    if (PIR1bits.ADIF == 1){
  1361     013F  1283               	bcf	3,5	;RP0=0, select bank0
  1362     0140  1303               	bcf	3,6	;RP1=0, select bank0
  1363     0141  1F0C               	btfss	12,6	;volatile
  1364     0142  2944               	goto	u49_21
  1365     0143  2945               	goto	u49_20
  1366     0144                     u49_21:
  1367     0144  2951               	goto	i1l1092
  1368     0145                     u49_20:
  1369     0145                     i1l1088:
  1370                           
  1371                           ;main.c: 66:         adc_var = adc_read();
  1372     0145  120A  118A  21BF  120A  118A  	fcall	_adc_read
  1373     014A  0871               	movf	?_adc_read+1,w
  1374     014B  00F7               	movwf	_adc_var+1
  1375     014C  0870               	movf	?_adc_read,w
  1376     014D  00F6               	movwf	_adc_var
  1377     014E                     i1l1090:
  1378                           
  1379                           ;main.c: 67:         PIR1bits.ADIF = 0;
  1380     014E  1283               	bcf	3,5	;RP0=0, select bank0
  1381     014F  1303               	bcf	3,6	;RP1=0, select bank0
  1382     0150  130C               	bcf	12,6	;volatile
  1383     0151                     i1l1092:
  1384                           
  1385                           ;main.c: 69:     if(SSPIF == 1){
  1386     0151  1D8C               	btfss	12,3	;volatile
  1387     0152  2954               	goto	u50_21
  1388     0153  2955               	goto	u50_20
  1389     0154                     u50_21:
  1390     0154  295E               	goto	i1l48
  1391     0155                     u50_20:
  1392     0155                     i1l1094:
  1393                           
  1394                           ;main.c: 70:         spiWrite(adc_var);
  1395     0155  0876               	movf	_adc_var,w
  1396     0156  120A  118A  21C9  120A  118A  	fcall	_spiWrite
  1397     015B                     i1l1096:
  1398                           
  1399                           ;main.c: 71:         SSPIF = 0;
  1400     015B  1283               	bcf	3,5	;RP0=0, select bank0
  1401     015C  1303               	bcf	3,6	;RP1=0, select bank0
  1402     015D  118C               	bcf	12,3	;volatile
  1403     015E                     i1l48:
  1404     015E  0875               	movf	??_isr+1,w
  1405     015F  008A               	movwf	10
  1406     0160  0E74               	swapf	??_isr,w
  1407     0161  0083               	movwf	3
  1408     0162  0EFE               	swapf	btemp,f
  1409     0163  0E7E               	swapf	btemp,w
  1410     0164  0009               	retfie
  1411     0165                     __end_of_isr:
  1412                           
  1413                           	psect	intentry
  1414     0004                     __pintentry:	
  1415                           ;incstack = 0
  1416                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1417                           
  1418     0004                     interrupt_function:
  1419     007E                     saved_w	set	btemp
  1420     0004  00FE               	movwf	btemp
  1421     0005  0E03               	swapf	3,w
  1422     0006  00F4               	movwf	??_isr
  1423     0007  080A               	movf	10,w
  1424     0008  00F5               	movwf	??_isr+1
  1425     0009  120A  118A  293F   	ljmp	_isr
  1426                           
  1427                           	psect	text6
  1428     01C9                     __ptext6:	
  1429 ;; *************** function _spiWrite *****************
  1430 ;; Defined at:
  1431 ;;		line 34 in file "SPI.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  dat             1    wreg     unsigned char 
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  dat             1    0[COMMON] unsigned char 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1445 ;;      Params:         0       0       0       0       0
  1446 ;;      Locals:         1       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0
  1448 ;;      Totals:         1       0       0       0       0
  1449 ;;Total ram usage:        1 bytes
  1450 ;; Hardware stack levels used: 1
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_isr
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458     01C9                     _spiWrite:	
  1459                           ;psect for function _spiWrite
  1460                           
  1461                           
  1462                           ;incstack = 0
  1463                           ; Regs used in _spiWrite: [wreg]
  1464                           ;spiWrite@dat stored from wreg
  1465     01C9  00F0               	movwf	spiWrite@dat
  1466     01CA                     i1l858:
  1467                           
  1468                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1469     01CA  0870               	movf	spiWrite@dat,w
  1470     01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1471     01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1472     01CD  0093               	movwf	19	;volatile
  1473     01CE                     i1l77:
  1474     01CE  0008               	return
  1475     01CF                     __end_of_spiWrite:
  1476                           
  1477                           	psect	text7
  1478     01BF                     __ptext7:	
  1479 ;; *************** function _adc_read *****************
  1480 ;; Defined at:
  1481 ;;		line 34 in file "ADC_setup.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  2    0[COMMON] int 
  1488 ;; Registers used:
  1489 ;;		wreg
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495 ;;      Params:         2       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0
  1497 ;;      Temps:          2       0       0       0       0
  1498 ;;      Totals:         4       0       0       0       0
  1499 ;;Total ram usage:        4 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; This function calls:
  1502 ;;		Nothing
  1503 ;; This function is called by:
  1504 ;;		_isr
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508     01BF                     _adc_read:	
  1509                           ;psect for function _adc_read
  1510                           
  1511     01BF                     i1l1072:	
  1512                           ;incstack = 0
  1513                           ; Regs used in _adc_read: [wreg]
  1514                           
  1515                           
  1516                           ;ADC_setup.c: 35:     return ADRESH;
  1517     01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1518     01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1519     01C1  081E               	movf	30,w	;volatile
  1520     01C2  00F2               	movwf	??_adc_read
  1521     01C3  01F3               	clrf	??_adc_read+1
  1522     01C4  0872               	movf	??_adc_read,w
  1523     01C5  00F0               	movwf	?_adc_read
  1524     01C6  0873               	movf	??_adc_read+1,w
  1525     01C7  00F1               	movwf	?_adc_read+1
  1526     01C8                     i1l109:
  1527     01C8  0008               	return
  1528     01C9                     __end_of_adc_read:
  1529     007E                     btemp	set	126	;btemp
  1530     007E                     wtemp0	set	126
  1531                           
  1532                           	psect	idloc
  1533                           
  1534                           ;Config register IDLOC0 @ 0x2000
  1535                           ;	unspecified, using default values
  1536     2000                     	org	8192
  1537     2000  3FFF               	dw	16383
  1538                           
  1539                           ;Config register IDLOC1 @ 0x2001
  1540                           ;	unspecified, using default values
  1541     2001                     	org	8193
  1542     2001  3FFF               	dw	16383
  1543                           
  1544                           ;Config register IDLOC2 @ 0x2002
  1545                           ;	unspecified, using default values
  1546     2002                     	org	8194
  1547     2002  3FFF               	dw	16383
  1548                           
  1549                           ;Config register IDLOC3 @ 0x2003
  1550                           ;	unspecified, using default values
  1551     2003                     	org	8195
  1552     2003  3FFF               	dw	16383
  1553                           
  1554                           	psect	config
  1555                           
  1556                           ;Config register CONFIG1 @ 0x2007
  1557                           ;	Oscillator Selection bits
  1558                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1559                           ;	Watchdog Timer Enable bit
  1560                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1561                           ;	Power-up Timer Enable bit
  1562                           ;	PWRTE = OFF, PWRT disabled
  1563                           ;	RE3/MCLR pin function select bit
  1564                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1565                           ;	Code Protection bit
  1566                           ;	CP = OFF, Program memory code protection is disabled
  1567                           ;	Data Code Protection bit
  1568                           ;	CPD = OFF, Data memory code protection is disabled
  1569                           ;	Brown Out Reset Selection bits
  1570                           ;	BOREN = OFF, BOR disabled
  1571                           ;	Internal External Switchover bit
  1572                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1573                           ;	Fail-Safe Clock Monitor Enabled bit
  1574                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1575                           ;	Low Voltage Programming Enable bit
  1576                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1577                           ;	In-Circuit Debugger Mode bit
  1578                           ;	DEBUG = 0x1, unprogramme  1579     2007                     	org	8199
  1580     2007  20D4               	dw	8404
  1581                           
  1582                           ;Config register CONFIG2 @ 0x2008
  1583                           ;	Brown-out Reset Selection bit
  1584                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1585                           ;	Flash Program Memory Self Write Enable bits
  1586                           ;	WRT = OFF, Write protection off
  1587     2008                     	org	8200
  1588     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      7       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_adc_read

Critical Paths under _main in BANK0

    _main->_adc_init
    _setup->_spiInit
    _adc_init->_adc_change_channel

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1101
                                              5 BANK0      2     2      0
                           _adc_init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             3     1      2     645
                                              2 BANK0      3     1      2
                 _adc_change_channel
 ---------------------------------------------------------------------------------
 (2) _adc_change_channel                                   2     0      2     524
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              4 COMMON     2     2      0
                           _adc_read
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _adc_read                                             4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
     _adc_change_channel
   _setup
     _spiInit

 _isr (ROOT)
   _adc_read
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Aug 01 00:05:09 2023

               _SSPSTATbits 0094                          l51 01BE                          l67 01A0  
                        l68 01A5                         l106 0187                         l126 010E  
                       u510 0194                         u511 0193                         u600 00AB  
                       u520 001E                         u601 00AA                         u521 001D  
                       u610 00BD                         u530 002D                         u611 00BC  
                       u531 002C                         u620 00CF                         u540 003F  
                       u621 00CE                         u541 003E                         u630 00E1  
                       u550 0051                         u631 00E0                         u551 0050  
                       u640 00F3                         u560 0063                         u641 00F2  
                       u561 0062                         u650 0105                         u570 0075  
                       u651 0104                         u571 0074                         u580 0087  
                       u660 012F                         u581 0086                         u661 012E  
                       u590 0099                         u591 0098                         u677 0124  
                       u687 0136                         u697 0184                         _isr 013F  
                      l1100 0194                        l1110 001E                        l1102 0198  
                      l1120 0036                        l1112 0020                        l1104 019A  
                      l1200 01AF                        l1130 0055                        l1122 003F  
                      l1114 0025                        l1210 017D                        l1106 019F  
                      l1202 01B2                        l1140 0075                        l1132 005A  
                      l1124 0043                        l1116 002D                        l1108 0016  
                      l1212 0180                        l1204 01B3                        l1220 012F  
                      l1150 0090                        l1142 0079                        l1134 0063  
                      l1126 0048                        l1118 0031                        l1206 0165  
                      l1222 0130                        l1214 010F                        l1160 00AF  
                      l1152 0099                        l1144 007E                        l1136 0067  
                      l1128 0051                        l1208 0172                        l1216 011E  
                      l1170 00CF                        l1162 00B4                        l1154 009D  
                      l1146 0087                        l1138 006C                        l1218 0129  
                      l1180 00EA                        l1172 00D3                        l1164 00BD  
                      l1156 00A2                        l1148 008B                        l1190 0109  
                      l1182 00F3                        l1174 00D8                        l1166 00C1  
                      l1158 00AB                        l1184 00F7                        l1176 00E1  
                      l1168 00C6                        l1192 01A6                        l1186 00FC  
                      l1178 00E5                        l1098 018B                        l1194 01AA  
                      l1188 0105                        l1196 01AB                        l1198 01AC  
                      ?_isr 0070                        i1l48 015E                        i1l77 01CE  
                      _main 010F                        btemp 007E                        start 000C  
                     ??_isr 0074                       ?_main 0070                       _ANSEL 0188  
                     i1l109 01C8                       i1l858 01CA                       u50_20 0155  
                     u50_21 0154                       u49_20 0145                       u49_21 0144  
                     _SSPIF 0063                       _setup 01A6                       pclath 000A  
           __end_of_spiInit 01A6                       status 0003                       wtemp0 007E  
           __initialization 000F                __end_of_main 013F                      ??_main 0025  
                    _ADRESH 001E                      ?_setup 0070                      _ANSELH 0189  
          __end_of_adc_init 0188            __end_of_adc_read 01C9                      i1l1072 01BF  
                    i1l1090 014E                      i1l1092 0151                      i1l1094 0155  
                    i1l1086 013F                      i1l1096 015B                      i1l1088 0145  
                    _TRISC3 043B                      _TRISC5 043D                      _SSPCON 0014  
                    _SSPBUF 0013   adc_change_channel@channel 0020                      saved_w 007E  
          __end_of_spiWrite 01CF                   ??_spiInit 0023     __end_of__initialization 0012  
            __pcstackCOMMON 0070               __end_of_setup 01BF                     ??_setup 0024  
                __pmaintext 010F                  __pintentry 0004                   ?_adc_init 0022  
                 ?_adc_read 0070                     _SSPSTAT 0094                   ?_spiWrite 0070  
                   _adc_var 0076                  ??_adc_init 0024                  ??_adc_read 0072  
                   __ptext1 01A6                     __ptext2 0188                     __ptext3 0165  
                   __ptext4 0016                     __ptext5 013F                     __ptext6 01C9  
                   __ptext7 01BF                     _spiInit 0188        end_of_initialization 0012  
                ??_spiWrite 0070                   _TRISAbits 0085                 spiWrite@dat 0070  
__end_of_adc_change_channel 010F         start_initialization 000F                 __end_of_isr 0165  
           adc_init@channel 0022                 __pbssCOMMON 0076                   ___latbits 0002  
             __pcstackBANK0 0020                    ?_spiInit 0020        spiInit@sTransmitEdge 0022  
         interrupt_function 0004                    _PIE1bits 008C          spiInit@sDataSample 0020  
                  _PIR1bits 000C                  _ADCON0bits 001F                  _ADCON1bits 009F  
                  _adc_init 0165                    _adc_read 01BF          _adc_change_channel 0016  
       ?_adc_change_channel 0020                    _temporal 0078                    _spiWrite 01C9  
              spiInit@sType 0023           spiInit@sClockIdle 0021                  _INTCONbits 000B  
      ??_adc_change_channel 0022                    intlevel1 0000  
