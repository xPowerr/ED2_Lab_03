

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Aug 02 22:37:11 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Version 2.40
    25                           ; Generated 04/07/2022 GMT
    26                           ; 
    27                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0000                     	;# 
    60     0001                     	;# 
    61     0002                     	;# 
    62     0003                     	;# 
    63     0004                     	;# 
    64     0005                     	;# 
    65     0006                     	;# 
    66     0007                     	;# 
    67     0008                     	;# 
    68     0009                     	;# 
    69     000A                     	;# 
    70     000B                     	;# 
    71     000C                     	;# 
    72     000D                     	;# 
    73     000E                     	;# 
    74     000E                     	;# 
    75     000F                     	;# 
    76     0010                     	;# 
    77     0011                     	;# 
    78     0012                     	;# 
    79     0013                     	;# 
    80     0014                     	;# 
    81     0015                     	;# 
    82     0015                     	;# 
    83     0016                     	;# 
    84     0017                     	;# 
    85     0018                     	;# 
    86     0019                     	;# 
    87     001A                     	;# 
    88     001B                     	;# 
    89     001B                     	;# 
    90     001C                     	;# 
    91     001D                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     0081                     	;# 
    95     0085                     	;# 
    96     0086                     	;# 
    97     0087                     	;# 
    98     0088                     	;# 
    99     0089                     	;# 
   100     008C                     	;# 
   101     008D                     	;# 
   102     008E                     	;# 
   103     008F                     	;# 
   104     0090                     	;# 
   105     0091                     	;# 
   106     0092                     	;# 
   107     0093                     	;# 
   108     0093                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0095                     	;# 
   112     0096                     	;# 
   113     0097                     	;# 
   114     0098                     	;# 
   115     0099                     	;# 
   116     009A                     	;# 
   117     009B                     	;# 
   118     009C                     	;# 
   119     009D                     	;# 
   120     009E                     	;# 
   121     009F                     	;# 
   122     0105                     	;# 
   123     0107                     	;# 
   124     0108                     	;# 
   125     0109                     	;# 
   126     010C                     	;# 
   127     010C                     	;# 
   128     010D                     	;# 
   129     010E                     	;# 
   130     010F                     	;# 
   131     0185                     	;# 
   132     0187                     	;# 
   133     0188                     	;# 
   134     0189                     	;# 
   135     018C                     	;# 
   136     018D                     	;# 
   137     0000                     	;# 
   138     0001                     	;# 
   139     0002                     	;# 
   140     0003                     	;# 
   141     0004                     	;# 
   142     0005                     	;# 
   143     0006                     	;# 
   144     0007                     	;# 
   145     0008                     	;# 
   146     0009                     	;# 
   147     000A                     	;# 
   148     000B                     	;# 
   149     000C                     	;# 
   150     000D                     	;# 
   151     000E                     	;# 
   152     000E                     	;# 
   153     000F                     	;# 
   154     0010                     	;# 
   155     0011                     	;# 
   156     0012                     	;# 
   157     0013                     	;# 
   158     0014                     	;# 
   159     0015                     	;# 
   160     0015                     	;# 
   161     0016                     	;# 
   162     0017                     	;# 
   163     0018                     	;# 
   164     0019                     	;# 
   165     001A                     	;# 
   166     001B                     	;# 
   167     001B                     	;# 
   168     001C                     	;# 
   169     001D                     	;# 
   170     001E                     	;# 
   171     001F                     	;# 
   172     0081                     	;# 
   173     0085                     	;# 
   174     0086                     	;# 
   175     0087                     	;# 
   176     0088                     	;# 
   177     0089                     	;# 
   178     008C                     	;# 
   179     008D                     	;# 
   180     008E                     	;# 
   181     008F                     	;# 
   182     0090                     	;# 
   183     0091                     	;# 
   184     0092                     	;# 
   185     0093                     	;# 
   186     0093                     	;# 
   187     0093                     	;# 
   188     0094                     	;# 
   189     0095                     	;# 
   190     0096                     	;# 
   191     0097                     	;# 
   192     0098                     	;# 
   193     0099                     	;# 
   194     009A                     	;# 
   195     009B                     	;# 
   196     009C                     	;# 
   197     009D                     	;# 
   198     009E                     	;# 
   199     009F                     	;# 
   200     0105                     	;# 
   201     0107                     	;# 
   202     0108                     	;# 
   203     0109                     	;# 
   204     010C                     	;# 
   205     010C                     	;# 
   206     010D                     	;# 
   207     010E                     	;# 
   208     010F                     	;# 
   209     0185                     	;# 
   210     0187                     	;# 
   211     0188                     	;# 
   212     0189                     	;# 
   213     018C                     	;# 
   214     018D                     	;# 
   215     0000                     	;# 
   216     0001                     	;# 
   217     0002                     	;# 
   218     0003                     	;# 
   219     0004                     	;# 
   220     0005                     	;# 
   221     0006                     	;# 
   222     0007                     	;# 
   223     0008                     	;# 
   224     0009                     	;# 
   225     000A                     	;# 
   226     000B                     	;# 
   227     000C                     	;# 
   228     000D                     	;# 
   229     000E                     	;# 
   230     000E                     	;# 
   231     000F                     	;# 
   232     0010                     	;# 
   233     0011                     	;# 
   234     0012                     	;# 
   235     0013                     	;# 
   236     0014                     	;# 
   237     0015                     	;# 
   238     0015                     	;# 
   239     0016                     	;# 
   240     0017                     	;# 
   241     0018                     	;# 
   242     0019                     	;# 
   243     001A                     	;# 
   244     001B                     	;# 
   245     001B                     	;# 
   246     001C                     	;# 
   247     001D                     	;# 
   248     001E                     	;# 
   249     001F                     	;# 
   250     0081                     	;# 
   251     0085                     	;# 
   252     0086                     	;# 
   253     0087                     	;# 
   254     0088                     	;# 
   255     0089                     	;# 
   256     008C                     	;# 
   257     008D                     	;# 
   258     008E                     	;# 
   259     008F                     	;# 
   260     0090                     	;# 
   261     0091                     	;# 
   262     0092                     	;# 
   263     0093                     	;# 
   264     0093                     	;# 
   265     0093                     	;# 
   266     0094                     	;# 
   267     0095                     	;# 
   268     0096                     	;# 
   269     0097                     	;# 
   270     0098                     	;# 
   271     0099                     	;# 
   272     009A                     	;# 
   273     009B                     	;# 
   274     009C                     	;# 
   275     009D                     	;# 
   276     009E                     	;# 
   277     009F                     	;# 
   278     0105                     	;# 
   279     0107                     	;# 
   280     0108                     	;# 
   281     0109                     	;# 
   282     010C                     	;# 
   283     010C                     	;# 
   284     010D                     	;# 
   285     010E                     	;# 
   286     010F                     	;# 
   287     0185                     	;# 
   288     0187                     	;# 
   289     0188                     	;# 
   290     0189                     	;# 
   291     018C                     	;# 
   292     018D                     	;# 
   293     0000                     	;# 
   294     0001                     	;# 
   295     0002                     	;# 
   296     0003                     	;# 
   297     0004                     	;# 
   298     0005                     	;# 
   299     0006                     	;# 
   300     0007                     	;# 
   301     0008                     	;# 
   302     0009                     	;# 
   303     000A                     	;# 
   304     000B                     	;# 
   305     000C                     	;# 
   306     000D                     	;# 
   307     000E                     	;# 
   308     000E                     	;# 
   309     000F                     	;# 
   310     0010                     	;# 
   311     0011                     	;# 
   312     0012                     	;# 
   313     0013                     	;# 
   314     0014                     	;# 
   315     0015                     	;# 
   316     0015                     	;# 
   317     0016                     	;# 
   318     0017                     	;# 
   319     0018                     	;# 
   320     0019                     	;# 
   321     001A                     	;# 
   322     001B                     	;# 
   323     001B                     	;# 
   324     001C                     	;# 
   325     001D                     	;# 
   326     001E                     	;# 
   327     001F                     	;# 
   328     0081                     	;# 
   329     0085                     	;# 
   330     0086                     	;# 
   331     0087                     	;# 
   332     0088                     	;# 
   333     0089                     	;# 
   334     008C                     	;# 
   335     008D                     	;# 
   336     008E                     	;# 
   337     008F                     	;# 
   338     0090                     	;# 
   339     0091                     	;# 
   340     0092                     	;# 
   341     0093                     	;# 
   342     0093                     	;# 
   343     0093                     	;# 
   344     0094                     	;# 
   345     0095                     	;# 
   346     0096                     	;# 
   347     0097                     	;# 
   348     0098                     	;# 
   349     0099                     	;# 
   350     009A                     	;# 
   351     009B                     	;# 
   352     009C                     	;# 
   353     009D                     	;# 
   354     009E                     	;# 
   355     009F                     	;# 
   356     0105                     	;# 
   357     0107                     	;# 
   358     0108                     	;# 
   359     0109                     	;# 
   360     010C                     	;# 
   361     010C                     	;# 
   362     010D                     	;# 
   363     010E                     	;# 
   364     010F                     	;# 
   365     0185                     	;# 
   366     0187                     	;# 
   367     0188                     	;# 
   368     0189                     	;# 
   369     018C                     	;# 
   370     018D                     	;# 
   371     001E                     _ADRESH	set	30
   372     0013                     _SSPBUF	set	19
   373     0014                     _SSPCON	set	20
   374     0008                     _PORTD	set	8
   375     0006                     _PORTB	set	6
   376     0006                     _PORTBbits	set	6
   377     000B                     _INTCONbits	set	11
   378     000C                     _PIR1bits	set	12
   379     001F                     _ADCON0bits	set	31
   380     009F                     _ADCON1bits	set	159
   381     0094                     _SSPSTATbits	set	148
   382     0094                     _SSPSTAT	set	148
   383     008F                     _OSCCONbits	set	143
   384     008C                     _PIE1bits	set	140
   385     0095                     _WPUBbits	set	149
   386     0096                     _IOCBbits	set	150
   387     0081                     _OPTION_REGbits	set	129
   388     0088                     _TRISD	set	136
   389     0086                     _TRISBbits	set	134
   390     0085                     _TRISAbits	set	133
   391     043B                     _TRISC3	set	1083
   392     043D                     _TRISC5	set	1085
   393     0188                     _ANSEL	set	392
   394     0189                     _ANSELH	set	393
   395     0188                     _ANSELbits	set	392
   396                           
   397                           	psect	cinit
   398     000F                     start_initialization:	
   399                           ; #config settings
   400                           
   401     000F                     __initialization:
   402                           
   403                           ; Clear objects allocated to COMMON
   404     000F  01F7               	clrf	__pbssCOMMON& (0+127)
   405     0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   406     0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   407     0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   408     0013                     end_of_initialization:	
   409                           ;End of C runtime variable initialization code
   410                           
   411     0013                     __end_of__initialization:
   412     0013  0183               	clrf	3
   413     0014  120A  118A  2AED   	ljmp	_main	;jump to C main() function
   414                           
   415                           	psect	bssCOMMON
   416     0077                     __pbssCOMMON:
   417     0077                     _bandera:
   418     0077                     	ds	1
   419     0078                     _contador:
   420     0078                     	ds	1
   421     0079                     _voltaje1:
   422     0079                     	ds	1
   423     007A                     _var:
   424     007A                     	ds	1
   425                           
   426                           	psect	cstackCOMMON
   427     0070                     __pcstackCOMMON:
   428     0070                     ?_setup:
   429     0070                     ?_spiRead:	
   430                           ; 1 bytes @ 0x0
   431                           
   432     0070                     ??_spiRead:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0070                     ?_spiWrite:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0070                     ??_spiWrite:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0070                     ?_main:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ?_isr:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ?_spiReceiveWait:	
   448                           ; 1 bytes @ 0x0
   449                           
   450     0070                     ??_spiReceiveWait:	
   451                           ; 1 bytes @ 0x0
   452                           
   453     0070                     ?i1_adc_change_channel:	
   454                           ; 1 bytes @ 0x0
   455                           
   456     0070                     ?_adc_read:	
   457                           ; 1 bytes @ 0x0
   458                           
   459     0070                     spiWrite@dat:	
   460                           ; 2 bytes @ 0x0
   461                           
   462     0070                     i1adc_change_channel@channel:	
   463                           ; 1 bytes @ 0x0
   464                           
   465                           
   466                           ; 2 bytes @ 0x0
   467     0070                     	ds	2
   468     0072                     ??_adc_read:
   469     0072                     ??i1_adc_change_channel:	
   470                           ; 1 bytes @ 0x2
   471                           
   472                           
   473                           ; 1 bytes @ 0x2
   474     0072                     	ds	2
   475     0074                     ??_isr:
   476                           
   477                           ; 1 bytes @ 0x4
   478     0074                     	ds	3
   479                           
   480                           	psect	cstackBANK0
   481     0020                     __pcstackBANK0:
   482     0020                     ?_adc_change_channel:
   483     0020                     ?_spiInit:	
   484                           ; 1 bytes @ 0x0
   485                           
   486     0020                     spiInit@sDataSample:	
   487                           ; 1 bytes @ 0x0
   488                           
   489     0020                     adc_change_channel@channel:	
   490                           ; 1 bytes @ 0x0
   491                           
   492                           
   493                           ; 2 bytes @ 0x0
   494     0020                     	ds	1
   495     0021                     spiInit@sClockIdle:
   496                           
   497                           ; 1 bytes @ 0x1
   498     0021                     	ds	1
   499     0022                     ?_adc_init:
   500     0022                     ??_adc_change_channel:	
   501                           ; 1 bytes @ 0x2
   502                           
   503     0022                     spiInit@sTransmitEdge:	
   504                           ; 1 bytes @ 0x2
   505                           
   506     0022                     adc_init@channel:	
   507                           ; 1 bytes @ 0x2
   508                           
   509                           
   510                           ; 2 bytes @ 0x2
   511     0022                     	ds	1
   512     0023                     ??_spiInit:
   513     0023                     spiInit@sType:	
   514                           ; 1 bytes @ 0x3
   515                           
   516                           
   517                           ; 1 bytes @ 0x3
   518     0023                     	ds	1
   519     0024                     ??_setup:
   520     0024                     ??_adc_init:	
   521                           ; 1 bytes @ 0x4
   522                           
   523                           
   524                           ; 1 bytes @ 0x4
   525     0024                     	ds	1
   526     0025                     ??_main:
   527                           
   528                           	psect	maintext
   529     02ED                     __pmaintext:	
   530                           ; 1 bytes @ 0x5
   531 ;;
   532 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   533 ;;
   534 ;; *************** function _main *****************
   535 ;; Defined at:
   536 ;;		line 49 in file "main.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;		None
   541 ;; Return value:  Size  Location     Type
   542 ;;                  1    wreg      void 
   543 ;; Registers used:
   544 ;;		wreg, status,2, status,0, pclath, cstack
   545 ;; Tracked objects:
   546 ;;		On entry : B00/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   550 ;;      Params:         0       0       0       0       0
   551 ;;      Locals:         0       0       0       0       0
   552 ;;      Temps:          0       0       0       0       0
   553 ;;      Totals:         0       0       0       0       0
   554 ;;Total ram usage:        0 bytes
   555 ;; Hardware stack levels required when called: 5
   556 ;; This function calls:
   557 ;;		_adc_init
   558 ;;		_setup
   559 ;; This function is called by:
   560 ;;		Startup code after reset
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564     02ED                     _main:	
   565                           ;psect for function _main
   566                           
   567     02ED                     l1550:	
   568                           ;incstack = 0
   569                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   570                           
   571                           
   572                           ;main.c: 50:     setup();
   573     02ED  120A  118A  2279  120A  118A  	fcall	_setup
   574                           
   575                           ;main.c: 51:     adc_init(0);
   576     02F2  3000               	movlw	0
   577     02F3  1283               	bcf	3,5	;RP0=0, select bank0
   578     02F4  1303               	bcf	3,6	;RP1=0, select bank0
   579     02F5  00A2               	movwf	adc_init@channel
   580     02F6  00A3               	movwf	adc_init@channel+1
   581     02F7  120A  118A  22AC  120A  118A  	fcall	_adc_init
   582     02FC                     l1552:
   583                           
   584                           ;main.c: 56:        if (ADCON0bits.GO == 0) {
   585     02FC  1283               	bcf	3,5	;RP0=0, select bank0
   586     02FD  1303               	bcf	3,6	;RP1=0, select bank0
   587     02FE  189F               	btfsc	31,1	;volatile
   588     02FF  2B01               	goto	u1121
   589     0300  2B02               	goto	u1120
   590     0301                     u1121:
   591     0301  2AFC               	goto	l1552
   592     0302                     u1120:
   593     0302                     l1554:
   594                           
   595                           ;main.c: 57:             ADCON0bits.GO = 1;
   596     0302  149F               	bsf	31,1	;volatile
   597     0303  2AFC               	goto	l1552
   598     0304  120A  118A  280C   	ljmp	start
   599     0307                     __end_of_main:
   600                           
   601                           	psect	text1
   602     0279                     __ptext1:	
   603 ;; *************** function _setup *****************
   604 ;; Defined at:
   605 ;;		line 101 in file "main.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0, pclath, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0
   622 ;;      Totals:         0       0       0       0       0
   623 ;;Total ram usage:        0 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; Hardware stack levels required when called: 4
   626 ;; This function calls:
   627 ;;		_spiInit
   628 ;; This function is called by:
   629 ;;		_main
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633     0279                     _setup:	
   634                           ;psect for function _setup
   635                           
   636     0279                     l1502:	
   637                           ;incstack = 0
   638                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   639                           
   640                           
   641                           ;main.c: 104:     ANSELbits.ANS0 = 1;
   642     0279  1683               	bsf	3,5	;RP0=1, select bank3
   643     027A  1703               	bsf	3,6	;RP1=1, select bank3
   644     027B  1408               	bsf	8,0	;volatile
   645                           
   646                           ;main.c: 105:     ANSELbits.ANS4 = 0;
   647     027C  1208               	bcf	8,4	;volatile
   648     027D                     l1504:
   649                           
   650                           ;main.c: 106:     ANSELH = 0;
   651     027D  0189               	clrf	9	;volatile
   652     027E                     l1506:
   653                           
   654                           ;main.c: 109:     TRISAbits.TRISA5 = 1;
   655     027E  1683               	bsf	3,5	;RP0=1, select bank1
   656     027F  1303               	bcf	3,6	;RP1=0, select bank1
   657     0280  1685               	bsf	5,5	;volatile
   658     0281                     l1508:
   659                           
   660                           ;main.c: 110:     TRISBbits.TRISB7 = 1;
   661     0281  1786               	bsf	6,7	;volatile
   662     0282                     l1510:
   663                           
   664                           ;main.c: 111:     TRISBbits.TRISB6 = 1;
   665     0282  1706               	bsf	6,6	;volatile
   666                           
   667                           ;main.c: 112:     TRISD = 0;
   668     0283  0188               	clrf	8	;volatile
   669                           
   670                           ;main.c: 114:     PORTB = 0;
   671     0284  1283               	bcf	3,5	;RP0=0, select bank0
   672     0285  1303               	bcf	3,6	;RP1=0, select bank0
   673     0286  0186               	clrf	6	;volatile
   674                           
   675                           ;main.c: 115:     PORTD = 0;
   676     0287  0188               	clrf	8	;volatile
   677     0288                     l1512:
   678                           
   679                           ;main.c: 119:     OPTION_REGbits.nRBPU = 0;
   680     0288  1683               	bsf	3,5	;RP0=1, select bank1
   681     0289  1303               	bcf	3,6	;RP1=0, select bank1
   682     028A  1381               	bcf	1,7	;volatile
   683     028B                     l1514:
   684                           
   685                           ;main.c: 120:     IOCBbits.IOCB7 = 1;
   686     028B  1796               	bsf	22,7	;volatile
   687     028C                     l1516:
   688                           
   689                           ;main.c: 121:     IOCBbits.IOCB6 = 1;
   690     028C  1716               	bsf	22,6	;volatile
   691     028D                     l1518:
   692                           
   693                           ;main.c: 123:     WPUBbits.WPUB7 = 1;
   694     028D  1795               	bsf	21,7	;volatile
   695     028E                     l1520:
   696                           
   697                           ;main.c: 124:     WPUBbits.WPUB6 = 1;
   698     028E  1715               	bsf	21,6	;volatile
   699     028F                     l1522:
   700                           
   701                           ;main.c: 126:     INTCONbits.GIE = 1;
   702     028F  178B               	bsf	11,7	;volatile
   703     0290                     l1524:
   704                           
   705                           ;main.c: 127:     INTCONbits.PEIE = 1;
   706     0290  170B               	bsf	11,6	;volatile
   707     0291                     l1526:
   708                           
   709                           ;main.c: 128:     INTCONbits.RBIE = 1;
   710     0291  158B               	bsf	11,3	;volatile
   711     0292                     l1528:
   712                           
   713                           ;main.c: 129:     INTCONbits.RBIF = 0;
   714     0292  100B               	bcf	11,0	;volatile
   715     0293                     l1530:
   716                           
   717                           ;main.c: 130:     PIE1bits.ADIE = 1;
   718     0293  170C               	bsf	12,6	;volatile
   719     0294                     l1532:
   720                           
   721                           ;main.c: 131:     PIR1bits.SSPIF = 0;
   722     0294  1283               	bcf	3,5	;RP0=0, select bank0
   723     0295  1303               	bcf	3,6	;RP1=0, select bank0
   724     0296  118C               	bcf	12,3	;volatile
   725     0297                     l1534:
   726                           
   727                           ;main.c: 132:     PIE1bits.SSPIE = 1;
   728     0297  1683               	bsf	3,5	;RP0=1, select bank1
   729     0298  1303               	bcf	3,6	;RP1=0, select bank1
   730     0299  158C               	bsf	12,3	;volatile
   731     029A                     l1536:
   732                           
   733                           ;main.c: 135:     OSCCONbits.IRCF = 0b110 ;
   734     029A  080F               	movf	15,w	;volatile
   735     029B  398F               	andlw	-113
   736     029C  3860               	iorlw	96
   737     029D  008F               	movwf	15	;volatile
   738     029E                     l1538:
   739                           
   740                           ;main.c: 136:     OSCCONbits.SCS = 1;
   741     029E  140F               	bsf	15,0	;volatile
   742     029F                     l1540:
   743                           
   744                           ;main.c: 138:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_END, SPI_CLOCK_IDLE_LOW, SPI_
      +                          IDLE_2_ACTIVE);
   745     029F  3080               	movlw	128
   746     02A0  1283               	bcf	3,5	;RP0=0, select bank0
   747     02A1  1303               	bcf	3,6	;RP1=0, select bank0
   748     02A2  00A0               	movwf	spiInit@sDataSample
   749     02A3  01A1               	clrf	spiInit@sClockIdle
   750     02A4  01A2               	clrf	spiInit@sTransmitEdge
   751     02A5  3024               	movlw	36
   752     02A6  120A  118A  22CF  120A  118A  	fcall	_spiInit
   753     02AB                     l81:
   754     02AB  0008               	return
   755     02AC                     __end_of_setup:
   756                           
   757                           	psect	text2
   758     02CF                     __ptext2:	
   759 ;; *************** function _spiInit *****************
   760 ;; Defined at:
   761 ;;		line 12 in file "SPI.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;  sType           1    wreg     enum E1292
   764 ;;  sDataSample     1    0[BANK0 ] enum E1300
   765 ;;  sClockIdle      1    1[BANK0 ] enum E1304
   766 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  sType           1    3[BANK0 ] enum E1292
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         0       3       0       0       0
   779 ;;      Locals:         0       1       0       0       0
   780 ;;      Temps:          0       0       0       0       0
   781 ;;      Totals:         0       4       0       0       0
   782 ;;Total ram usage:        4 bytes
   783 ;; Hardware stack levels used: 1
   784 ;; Hardware stack levels required when called: 3
   785 ;; This function calls:
   786 ;;		Nothing
   787 ;; This function is called by:
   788 ;;		_setup
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792     02CF                     _spiInit:	
   793                           ;psect for function _spiInit
   794                           
   795                           
   796                           ;incstack = 0
   797                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   798                           ;spiInit@sType stored from wreg
   799     02CF  1283               	bcf	3,5	;RP0=0, select bank0
   800     02D0  1303               	bcf	3,6	;RP1=0, select bank0
   801     02D1  00A3               	movwf	spiInit@sType
   802     02D2                     l1492:
   803                           
   804                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   805     02D2  1683               	bsf	3,5	;RP0=1, select bank1
   806     02D3  1303               	bcf	3,6	;RP1=0, select bank1
   807     02D4  1287               	bcf	7,5	;volatile
   808                           
   809                           ;SPI.c: 15:     if(sType & 0b00000100)
   810     02D5  1283               	bcf	3,5	;RP0=0, select bank0
   811     02D6  1303               	bcf	3,6	;RP1=0, select bank0
   812     02D7  1D23               	btfss	spiInit@sType,2
   813     02D8  2ADA               	goto	u1111
   814     02D9  2ADB               	goto	u1110
   815     02DA                     u1111:
   816     02DA  2AE1               	goto	l1498
   817     02DB                     u1110:
   818     02DB                     l1494:
   819                           
   820                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   821     02DB  0822               	movf	spiInit@sTransmitEdge,w
   822     02DC  1683               	bsf	3,5	;RP0=1, select bank1
   823     02DD  1303               	bcf	3,6	;RP1=0, select bank1
   824     02DE  0094               	movwf	20	;volatile
   825     02DF                     l1496:
   826                           
   827                           ;SPI.c: 18:         TRISC3 = 1;
   828     02DF  1587               	bsf	7,3	;volatile
   829                           
   830                           ;SPI.c: 19:     }
   831     02E0  2AE7               	goto	l97
   832     02E1                     l1498:
   833                           
   834                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   835     02E1  0820               	movf	spiInit@sDataSample,w
   836     02E2  0422               	iorwf	spiInit@sTransmitEdge,w
   837     02E3  1683               	bsf	3,5	;RP0=1, select bank1
   838     02E4  1303               	bcf	3,6	;RP1=0, select bank1
   839     02E5  0094               	movwf	20	;volatile
   840     02E6                     l1500:
   841                           
   842                           ;SPI.c: 23:         TRISC3 = 0;
   843     02E6  1187               	bcf	7,3	;volatile
   844     02E7                     l97:	
   845                           ;SPI.c: 24:     }
   846                           
   847                           
   848                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   849     02E7  1283               	bcf	3,5	;RP0=0, select bank0
   850     02E8  1303               	bcf	3,6	;RP1=0, select bank0
   851     02E9  0823               	movf	spiInit@sType,w
   852     02EA  0421               	iorwf	spiInit@sClockIdle,w
   853     02EB  0094               	movwf	20	;volatile
   854     02EC                     l98:
   855     02EC  0008               	return
   856     02ED                     __end_of_spiInit:
   857                           
   858                           	psect	text3
   859     02AC                     __ptext3:	
   860 ;; *************** function _adc_init *****************
   861 ;; Defined at:
   862 ;;		line 15 in file "ADC_setup.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  channel         2    2[BANK0 ] int 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0, pclath, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   876 ;;      Params:         0       2       0       0       0
   877 ;;      Locals:         0       0       0       0       0
   878 ;;      Temps:          0       1       0       0       0
   879 ;;      Totals:         0       3       0       0       0
   880 ;;Total ram usage:        3 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; Hardware stack levels required when called: 4
   883 ;; This function calls:
   884 ;;		_adc_change_channel
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890     02AC                     _adc_init:	
   891                           ;psect for function _adc_init
   892                           
   893     02AC                     l1542:	
   894                           ;incstack = 0
   895                           ; Regs used in _adc_init: [wreg+status,2+status,0+pclath+cstack]
   896                           
   897                           
   898                           ;ADC_setup.c: 17:     PIE1bits.ADIE = 1;
   899     02AC  1683               	bsf	3,5	;RP0=1, select bank1
   900     02AD  1303               	bcf	3,6	;RP1=0, select bank1
   901     02AE  170C               	bsf	12,6	;volatile
   902                           
   903                           ;ADC_setup.c: 18:     PIR1bits.ADIF = 0;
   904     02AF  1283               	bcf	3,5	;RP0=0, select bank0
   905     02B0  1303               	bcf	3,6	;RP1=0, select bank0
   906     02B1  130C               	bcf	12,6	;volatile
   907                           
   908                           ;ADC_setup.c: 20:     ADCON0bits.ADCS1 = 0;
   909     02B2  139F               	bcf	31,7	;volatile
   910                           
   911                           ;ADC_setup.c: 21:     ADCON0bits.ADCS0 = 1;
   912     02B3  171F               	bsf	31,6	;volatile
   913                           
   914                           ;ADC_setup.c: 23:     ADCON1bits.VCFG1 = 0;
   915     02B4  1683               	bsf	3,5	;RP0=1, select bank1
   916     02B5  1303               	bcf	3,6	;RP1=0, select bank1
   917     02B6  129F               	bcf	31,5	;volatile
   918                           
   919                           ;ADC_setup.c: 24:     ADCON1bits.VCFG0 = 0;
   920     02B7  121F               	bcf	31,4	;volatile
   921                           
   922                           ;ADC_setup.c: 26:     ADCON1bits.ADFM = 0;
   923     02B8  139F               	bcf	31,7	;volatile
   924     02B9                     l1544:
   925                           
   926                           ;ADC_setup.c: 28:     adc_change_channel(channel);
   927     02B9  1283               	bcf	3,5	;RP0=0, select bank0
   928     02BA  1303               	bcf	3,6	;RP1=0, select bank0
   929     02BB  0823               	movf	adc_init@channel+1,w
   930     02BC  00A1               	movwf	adc_change_channel@channel+1
   931     02BD  0822               	movf	adc_init@channel,w
   932     02BE  00A0               	movwf	adc_change_channel@channel
   933     02BF  120A  118A  2017  120A  118A  	fcall	_adc_change_channel
   934     02C4                     l1546:
   935                           
   936                           ;ADC_setup.c: 30:     ADCON0bits.ADON = 1;
   937     02C4  1283               	bcf	3,5	;RP0=0, select bank0
   938     02C5  1303               	bcf	3,6	;RP1=0, select bank0
   939     02C6  141F               	bsf	31,0	;volatile
   940     02C7                     l1548:
   941                           
   942                           ;ADC_setup.c: 31:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   943     02C7  3020               	movlw	32
   944     02C8  1283               	bcf	3,5	;RP0=0, select bank0
   945     02C9  1303               	bcf	3,6	;RP1=0, select bank0
   946     02CA  00A4               	movwf	??_adc_init
   947     02CB                     u1137:
   948     02CB  0BA4               	decfsz	??_adc_init,f
   949     02CC  2ACB               	goto	u1137
   950     02CD  0000               	nop
   951     02CE                     l136:
   952     02CE  0008               	return
   953     02CF                     __end_of_adc_init:
   954                           
   955                           	psect	text4
   956     0017                     __ptext4:	
   957 ;; *************** function _adc_change_channel *****************
   958 ;; Defined at:
   959 ;;		line 38 in file "ADC_setup.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  channel         2    0[BANK0 ] int 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         0       2       0       0       0
   974 ;;      Locals:         0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0
   976 ;;      Totals:         0       2       0       0       0
   977 ;;Total ram usage:        2 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; Hardware stack levels required when called: 3
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_adc_init
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987     0017                     _adc_change_channel:	
   988                           ;psect for function _adc_change_channel
   989                           
   990     0017                     l1408:	
   991                           ;incstack = 0
   992                           ; Regs used in _adc_change_channel: [wreg+status,2+status,0]
   993                           
   994                           
   995                           ;ADC_setup.c: 39:     if(channel == 0){
   996     0017  1283               	bcf	3,5	;RP0=0, select bank0
   997     0018  1303               	bcf	3,6	;RP1=0, select bank0
   998     0019  0820               	movf	adc_change_channel@channel,w
   999     001A  0421               	iorwf	adc_change_channel@channel+1,w
  1000     001B  1D03               	btfss	3,2
  1001     001C  281E               	goto	u971
  1002     001D  281F               	goto	u970
  1003     001E                     u971:
  1004     001E  2826               	goto	l1414
  1005     001F                     u970:
  1006     001F                     l1410:
  1007                           
  1008                           ;ADC_setup.c: 40:         ADCON0bits.CHS = 0b0000;
  1009     001F  30C3               	movlw	-61
  1010     0020  059F               	andwf	31,f	;volatile
  1011     0021                     l1412:
  1012                           
  1013                           ;ADC_setup.c: 41:         ANSEL = ANSEL | 0b00000001;
  1014     0021  1683               	bsf	3,5	;RP0=1, select bank3
  1015     0022  1703               	bsf	3,6	;RP1=1, select bank3
  1016     0023  0808               	movf	8,w	;volatile
  1017     0024  3801               	iorlw	1
  1018     0025  0088               	movwf	8	;volatile
  1019     0026                     l1414:
  1020                           
  1021                           ;ADC_setup.c: 43:     if(channel == 1){
  1022     0026  1283               	bcf	3,5	;RP0=0, select bank0
  1023     0027  1303               	bcf	3,6	;RP1=0, select bank0
  1024     0028  0320               	decf	adc_change_channel@channel,w
  1025     0029  0421               	iorwf	adc_change_channel@channel+1,w
  1026     002A  1D03               	btfss	3,2
  1027     002B  282D               	goto	u981
  1028     002C  282E               	goto	u980
  1029     002D                     u981:
  1030     002D  2837               	goto	l1420
  1031     002E                     u980:
  1032     002E                     l1416:
  1033                           
  1034                           ;ADC_setup.c: 44:         ADCON0bits.CHS = 0b0001;
  1035     002E  081F               	movf	31,w	;volatile
  1036     002F  39C3               	andlw	-61
  1037     0030  3804               	iorlw	4
  1038     0031  009F               	movwf	31	;volatile
  1039     0032                     l1418:
  1040                           
  1041                           ;ADC_setup.c: 45:         ANSEL = ANSEL | 0b00000010;
  1042     0032  1683               	bsf	3,5	;RP0=1, select bank3
  1043     0033  1703               	bsf	3,6	;RP1=1, select bank3
  1044     0034  0808               	movf	8,w	;volatile
  1045     0035  3802               	iorlw	2
  1046     0036  0088               	movwf	8	;volatile
  1047     0037                     l1420:
  1048                           
  1049                           ;ADC_setup.c: 47:     if(channel == 2){
  1050     0037  3002               	movlw	2
  1051     0038  1283               	bcf	3,5	;RP0=0, select bank0
  1052     0039  1303               	bcf	3,6	;RP1=0, select bank0
  1053     003A  0620               	xorwf	adc_change_channel@channel,w
  1054     003B  0421               	iorwf	adc_change_channel@channel+1,w
  1055     003C  1D03               	btfss	3,2
  1056     003D  283F               	goto	u991
  1057     003E  2840               	goto	u990
  1058     003F                     u991:
  1059     003F  2849               	goto	l1426
  1060     0040                     u990:
  1061     0040                     l1422:
  1062                           
  1063                           ;ADC_setup.c: 48:         ADCON0bits.CHS = 0b0010;
  1064     0040  081F               	movf	31,w	;volatile
  1065     0041  39C3               	andlw	-61
  1066     0042  3808               	iorlw	8
  1067     0043  009F               	movwf	31	;volatile
  1068     0044                     l1424:
  1069                           
  1070                           ;ADC_setup.c: 49:         ANSEL = ANSEL | 0b00000100;
  1071     0044  1683               	bsf	3,5	;RP0=1, select bank3
  1072     0045  1703               	bsf	3,6	;RP1=1, select bank3
  1073     0046  0808               	movf	8,w	;volatile
  1074     0047  3804               	iorlw	4
  1075     0048  0088               	movwf	8	;volatile
  1076     0049                     l1426:
  1077                           
  1078                           ;ADC_setup.c: 51:     if(channel == 3){
  1079     0049  3003               	movlw	3
  1080     004A  1283               	bcf	3,5	;RP0=0, select bank0
  1081     004B  1303               	bcf	3,6	;RP1=0, select bank0
  1082     004C  0620               	xorwf	adc_change_channel@channel,w
  1083     004D  0421               	iorwf	adc_change_channel@channel+1,w
  1084     004E  1D03               	btfss	3,2
  1085     004F  2851               	goto	u1001
  1086     0050  2852               	goto	u1000
  1087     0051                     u1001:
  1088     0051  285B               	goto	l1432
  1089     0052                     u1000:
  1090     0052                     l1428:
  1091                           
  1092                           ;ADC_setup.c: 52:         ADCON0bits.CHS = 0b0011;
  1093     0052  081F               	movf	31,w	;volatile
  1094     0053  39C3               	andlw	-61
  1095     0054  380C               	iorlw	12
  1096     0055  009F               	movwf	31	;volatile
  1097     0056                     l1430:
  1098                           
  1099                           ;ADC_setup.c: 53:         ANSEL = ANSEL | 0b00001000;
  1100     0056  1683               	bsf	3,5	;RP0=1, select bank3
  1101     0057  1703               	bsf	3,6	;RP1=1, select bank3
  1102     0058  0808               	movf	8,w	;volatile
  1103     0059  3808               	iorlw	8
  1104     005A  0088               	movwf	8	;volatile
  1105     005B                     l1432:
  1106                           
  1107                           ;ADC_setup.c: 55:     if(channel == 4){
  1108     005B  3004               	movlw	4
  1109     005C  1283               	bcf	3,5	;RP0=0, select bank0
  1110     005D  1303               	bcf	3,6	;RP1=0, select bank0
  1111     005E  0620               	xorwf	adc_change_channel@channel,w
  1112     005F  0421               	iorwf	adc_change_channel@channel+1,w
  1113     0060  1D03               	btfss	3,2
  1114     0061  2863               	goto	u1011
  1115     0062  2864               	goto	u1010
  1116     0063                     u1011:
  1117     0063  286D               	goto	l1438
  1118     0064                     u1010:
  1119     0064                     l1434:
  1120                           
  1121                           ;ADC_setup.c: 56:         ADCON0bits.CHS = 0b0100;
  1122     0064  081F               	movf	31,w	;volatile
  1123     0065  39C3               	andlw	-61
  1124     0066  3810               	iorlw	16
  1125     0067  009F               	movwf	31	;volatile
  1126     0068                     l1436:
  1127                           
  1128                           ;ADC_setup.c: 57:         ANSEL = ANSEL | 0b00010000;
  1129     0068  1683               	bsf	3,5	;RP0=1, select bank3
  1130     0069  1703               	bsf	3,6	;RP1=1, select bank3
  1131     006A  0808               	movf	8,w	;volatile
  1132     006B  3810               	iorlw	16
  1133     006C  0088               	movwf	8	;volatile
  1134     006D                     l1438:
  1135                           
  1136                           ;ADC_setup.c: 59:     if(channel == 5){
  1137     006D  3005               	movlw	5
  1138     006E  1283               	bcf	3,5	;RP0=0, select bank0
  1139     006F  1303               	bcf	3,6	;RP1=0, select bank0
  1140     0070  0620               	xorwf	adc_change_channel@channel,w
  1141     0071  0421               	iorwf	adc_change_channel@channel+1,w
  1142     0072  1D03               	btfss	3,2
  1143     0073  2875               	goto	u1021
  1144     0074  2876               	goto	u1020
  1145     0075                     u1021:
  1146     0075  287F               	goto	l1444
  1147     0076                     u1020:
  1148     0076                     l1440:
  1149                           
  1150                           ;ADC_setup.c: 60:         ADCON0bits.CHS = 0b0101;
  1151     0076  081F               	movf	31,w	;volatile
  1152     0077  39C3               	andlw	-61
  1153     0078  3814               	iorlw	20
  1154     0079  009F               	movwf	31	;volatile
  1155     007A                     l1442:
  1156                           
  1157                           ;ADC_setup.c: 61:         ANSEL = ANSEL | 0b00100000;
  1158     007A  1683               	bsf	3,5	;RP0=1, select bank3
  1159     007B  1703               	bsf	3,6	;RP1=1, select bank3
  1160     007C  0808               	movf	8,w	;volatile
  1161     007D  3820               	iorlw	32
  1162     007E  0088               	movwf	8	;volatile
  1163     007F                     l1444:
  1164                           
  1165                           ;ADC_setup.c: 63:     if(channel == 6){
  1166     007F  3006               	movlw	6
  1167     0080  1283               	bcf	3,5	;RP0=0, select bank0
  1168     0081  1303               	bcf	3,6	;RP1=0, select bank0
  1169     0082  0620               	xorwf	adc_change_channel@channel,w
  1170     0083  0421               	iorwf	adc_change_channel@channel+1,w
  1171     0084  1D03               	btfss	3,2
  1172     0085  2887               	goto	u1031
  1173     0086  2888               	goto	u1030
  1174     0087                     u1031:
  1175     0087  2891               	goto	l1450
  1176     0088                     u1030:
  1177     0088                     l1446:
  1178                           
  1179                           ;ADC_setup.c: 64:         ADCON0bits.CHS = 0b0110;
  1180     0088  081F               	movf	31,w	;volatile
  1181     0089  39C3               	andlw	-61
  1182     008A  3818               	iorlw	24
  1183     008B  009F               	movwf	31	;volatile
  1184     008C                     l1448:
  1185                           
  1186                           ;ADC_setup.c: 65:         ANSEL = ANSEL | 0b01000000;
  1187     008C  1683               	bsf	3,5	;RP0=1, select bank3
  1188     008D  1703               	bsf	3,6	;RP1=1, select bank3
  1189     008E  0808               	movf	8,w	;volatile
  1190     008F  3840               	iorlw	64
  1191     0090  0088               	movwf	8	;volatile
  1192     0091                     l1450:
  1193                           
  1194                           ;ADC_setup.c: 67:     if(channel == 7){
  1195     0091  3007               	movlw	7
  1196     0092  1283               	bcf	3,5	;RP0=0, select bank0
  1197     0093  1303               	bcf	3,6	;RP1=0, select bank0
  1198     0094  0620               	xorwf	adc_change_channel@channel,w
  1199     0095  0421               	iorwf	adc_change_channel@channel+1,w
  1200     0096  1D03               	btfss	3,2
  1201     0097  2899               	goto	u1041
  1202     0098  289A               	goto	u1040
  1203     0099                     u1041:
  1204     0099  28A3               	goto	l1456
  1205     009A                     u1040:
  1206     009A                     l1452:
  1207                           
  1208                           ;ADC_setup.c: 68:         ADCON0bits.CHS = 0b0111;
  1209     009A  081F               	movf	31,w	;volatile
  1210     009B  39C3               	andlw	-61
  1211     009C  381C               	iorlw	28
  1212     009D  009F               	movwf	31	;volatile
  1213     009E                     l1454:
  1214                           
  1215                           ;ADC_setup.c: 69:         ANSEL = ANSEL | 0b10000000;
  1216     009E  1683               	bsf	3,5	;RP0=1, select bank3
  1217     009F  1703               	bsf	3,6	;RP1=1, select bank3
  1218     00A0  0808               	movf	8,w	;volatile
  1219     00A1  3880               	iorlw	128
  1220     00A2  0088               	movwf	8	;volatile
  1221     00A3                     l1456:
  1222                           
  1223                           ;ADC_setup.c: 71:     if(channel == 8){
  1224     00A3  3008               	movlw	8
  1225     00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1226     00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1227     00A6  0620               	xorwf	adc_change_channel@channel,w
  1228     00A7  0421               	iorwf	adc_change_channel@channel+1,w
  1229     00A8  1D03               	btfss	3,2
  1230     00A9  28AB               	goto	u1051
  1231     00AA  28AC               	goto	u1050
  1232     00AB                     u1051:
  1233     00AB  28B5               	goto	l1462
  1234     00AC                     u1050:
  1235     00AC                     l1458:
  1236                           
  1237                           ;ADC_setup.c: 72:         ADCON0bits.CHS = 0b1000;
  1238     00AC  081F               	movf	31,w	;volatile
  1239     00AD  39C3               	andlw	-61
  1240     00AE  3820               	iorlw	32
  1241     00AF  009F               	movwf	31	;volatile
  1242     00B0                     l1460:
  1243                           
  1244                           ;ADC_setup.c: 73:         ANSELH = ANSELH | 0b00000001;
  1245     00B0  1683               	bsf	3,5	;RP0=1, select bank3
  1246     00B1  1703               	bsf	3,6	;RP1=1, select bank3
  1247     00B2  0809               	movf	9,w	;volatile
  1248     00B3  3801               	iorlw	1
  1249     00B4  0089               	movwf	9	;volatile
  1250     00B5                     l1462:
  1251                           
  1252                           ;ADC_setup.c: 75:     if(channel == 9){
  1253     00B5  3009               	movlw	9
  1254     00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1255     00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1256     00B8  0620               	xorwf	adc_change_channel@channel,w
  1257     00B9  0421               	iorwf	adc_change_channel@channel+1,w
  1258     00BA  1D03               	btfss	3,2
  1259     00BB  28BD               	goto	u1061
  1260     00BC  28BE               	goto	u1060
  1261     00BD                     u1061:
  1262     00BD  28C7               	goto	l1468
  1263     00BE                     u1060:
  1264     00BE                     l1464:
  1265                           
  1266                           ;ADC_setup.c: 76:         ADCON0bits.CHS = 0b1001;
  1267     00BE  081F               	movf	31,w	;volatile
  1268     00BF  39C3               	andlw	-61
  1269     00C0  3824               	iorlw	36
  1270     00C1  009F               	movwf	31	;volatile
  1271     00C2                     l1466:
  1272                           
  1273                           ;ADC_setup.c: 77:         ANSELH = ANSELH | 0b00000010;
  1274     00C2  1683               	bsf	3,5	;RP0=1, select bank3
  1275     00C3  1703               	bsf	3,6	;RP1=1, select bank3
  1276     00C4  0809               	movf	9,w	;volatile
  1277     00C5  3802               	iorlw	2
  1278     00C6  0089               	movwf	9	;volatile
  1279     00C7                     l1468:
  1280                           
  1281                           ;ADC_setup.c: 79:     if(channel == 10){
  1282     00C7  300A               	movlw	10
  1283     00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1284     00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1285     00CA  0620               	xorwf	adc_change_channel@channel,w
  1286     00CB  0421               	iorwf	adc_change_channel@channel+1,w
  1287     00CC  1D03               	btfss	3,2
  1288     00CD  28CF               	goto	u1071
  1289     00CE  28D0               	goto	u1070
  1290     00CF                     u1071:
  1291     00CF  28D9               	goto	l1474
  1292     00D0                     u1070:
  1293     00D0                     l1470:
  1294                           
  1295                           ;ADC_setup.c: 80:         ADCON0bits.CHS = 0b1010;
  1296     00D0  081F               	movf	31,w	;volatile
  1297     00D1  39C3               	andlw	-61
  1298     00D2  3828               	iorlw	40
  1299     00D3  009F               	movwf	31	;volatile
  1300     00D4                     l1472:
  1301                           
  1302                           ;ADC_setup.c: 81:         ANSELH = ANSELH | 0b00000100;
  1303     00D4  1683               	bsf	3,5	;RP0=1, select bank3
  1304     00D5  1703               	bsf	3,6	;RP1=1, select bank3
  1305     00D6  0809               	movf	9,w	;volatile
  1306     00D7  3804               	iorlw	4
  1307     00D8  0089               	movwf	9	;volatile
  1308     00D9                     l1474:
  1309                           
  1310                           ;ADC_setup.c: 83:     if(channel == 11){
  1311     00D9  300B               	movlw	11
  1312     00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1313     00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1314     00DC  0620               	xorwf	adc_change_channel@channel,w
  1315     00DD  0421               	iorwf	adc_change_channel@channel+1,w
  1316     00DE  1D03               	btfss	3,2
  1317     00DF  28E1               	goto	u1081
  1318     00E0  28E2               	goto	u1080
  1319     00E1                     u1081:
  1320     00E1  28EB               	goto	l1480
  1321     00E2                     u1080:
  1322     00E2                     l1476:
  1323                           
  1324                           ;ADC_setup.c: 84:         ADCON0bits.CHS = 0b1011;
  1325     00E2  081F               	movf	31,w	;volatile
  1326     00E3  39C3               	andlw	-61
  1327     00E4  382C               	iorlw	44
  1328     00E5  009F               	movwf	31	;volatile
  1329     00E6                     l1478:
  1330                           
  1331                           ;ADC_setup.c: 85:         ANSELH = ANSELH | 0b00001000;
  1332     00E6  1683               	bsf	3,5	;RP0=1, select bank3
  1333     00E7  1703               	bsf	3,6	;RP1=1, select bank3
  1334     00E8  0809               	movf	9,w	;volatile
  1335     00E9  3808               	iorlw	8
  1336     00EA  0089               	movwf	9	;volatile
  1337     00EB                     l1480:
  1338                           
  1339                           ;ADC_setup.c: 87:     if(channel == 12){
  1340     00EB  300C               	movlw	12
  1341     00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1342     00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1343     00EE  0620               	xorwf	adc_change_channel@channel,w
  1344     00EF  0421               	iorwf	adc_change_channel@channel+1,w
  1345     00F0  1D03               	btfss	3,2
  1346     00F1  28F3               	goto	u1091
  1347     00F2  28F4               	goto	u1090
  1348     00F3                     u1091:
  1349     00F3  28FD               	goto	l1486
  1350     00F4                     u1090:
  1351     00F4                     l1482:
  1352                           
  1353                           ;ADC_setup.c: 88:         ADCON0bits.CHS = 0b1100;
  1354     00F4  081F               	movf	31,w	;volatile
  1355     00F5  39C3               	andlw	-61
  1356     00F6  3830               	iorlw	48
  1357     00F7  009F               	movwf	31	;volatile
  1358     00F8                     l1484:
  1359                           
  1360                           ;ADC_setup.c: 89:         ANSELH = ANSELH | 0b00010000;
  1361     00F8  1683               	bsf	3,5	;RP0=1, select bank3
  1362     00F9  1703               	bsf	3,6	;RP1=1, select bank3
  1363     00FA  0809               	movf	9,w	;volatile
  1364     00FB  3810               	iorlw	16
  1365     00FC  0089               	movwf	9	;volatile
  1366     00FD                     l1486:
  1367                           
  1368                           ;ADC_setup.c: 91:     if(channel == 13){
  1369     00FD  300D               	movlw	13
  1370     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1371     00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1372     0100  0620               	xorwf	adc_change_channel@channel,w
  1373     0101  0421               	iorwf	adc_change_channel@channel+1,w
  1374     0102  1D03               	btfss	3,2
  1375     0103  2905               	goto	u1101
  1376     0104  2906               	goto	u1100
  1377     0105                     u1101:
  1378     0105  290F               	goto	l156
  1379     0106                     u1100:
  1380     0106                     l1488:
  1381                           
  1382                           ;ADC_setup.c: 92:         ADCON0bits.CHS = 0b1101;
  1383     0106  081F               	movf	31,w	;volatile
  1384     0107  39C3               	andlw	-61
  1385     0108  3834               	iorlw	52
  1386     0109  009F               	movwf	31	;volatile
  1387     010A                     l1490:
  1388                           
  1389                           ;ADC_setup.c: 93:         ANSELH = ANSELH | 0b00100000;
  1390     010A  1683               	bsf	3,5	;RP0=1, select bank3
  1391     010B  1703               	bsf	3,6	;RP1=1, select bank3
  1392     010C  0809               	movf	9,w	;volatile
  1393     010D  3820               	iorlw	32
  1394     010E  0089               	movwf	9	;volatile
  1395     010F                     l156:
  1396     010F  0008               	return
  1397     0110                     __end_of_adc_change_channel:
  1398                           
  1399                           	psect	text5
  1400     0209                     __ptext5:	
  1401 ;; *************** function _isr *****************
  1402 ;; Defined at:
  1403 ;;		line 64 in file "main.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;		None
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		wreg, status,2, status,0, pclath, cstack
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1417 ;;      Params:         0       0       0       0       0
  1418 ;;      Locals:         0       0       0       0       0
  1419 ;;      Temps:          3       0       0       0       0
  1420 ;;      Totals:         3       0       0       0       0
  1421 ;;Total ram usage:        3 bytes
  1422 ;; Hardware stack levels used: 1
  1423 ;; Hardware stack levels required when called: 2
  1424 ;; This function calls:
  1425 ;;		_adc_read
  1426 ;;		_spiRead
  1427 ;;		_spiWrite
  1428 ;;		i1_adc_change_channel
  1429 ;; This function is called by:
  1430 ;;		Interrupt level 1
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434     0209                     _isr:	
  1435                           ;psect for function _isr
  1436                           
  1437     0209                     i1l1362:
  1438                           
  1439                           ;main.c: 65:    if (PIR1bits.ADIF == 1){
  1440     0209  1283               	bcf	3,5	;RP0=0, select bank0
  1441     020A  1303               	bcf	3,6	;RP1=0, select bank0
  1442     020B  1F0C               	btfss	12,6	;volatile
  1443     020C  2A0E               	goto	u86_21
  1444     020D  2A0F               	goto	u86_20
  1445     020E                     u86_21:
  1446     020E  2A21               	goto	i1l1370
  1447     020F                     u86_20:
  1448     020F                     i1l1364:
  1449                           
  1450                           ;main.c: 67:         voltaje1 = adc_read();
  1451     020F  120A  118A  2307  120A  118A  	fcall	_adc_read
  1452     0214  0870               	movf	?_adc_read,w
  1453     0215  00F9               	movwf	_voltaje1
  1454     0216                     i1l1366:
  1455                           
  1456                           ;main.c: 68:         adc_change_channel(0);
  1457     0216  3000               	movlw	0
  1458     0217  00F0               	movwf	i1adc_change_channel@channel
  1459     0218  00F1               	movwf	i1adc_change_channel@channel+1
  1460     0219  120A  118A  2110  120A  118A  	fcall	i1_adc_change_channel
  1461     021E                     i1l1368:
  1462                           
  1463                           ;main.c: 69:         PIR1bits.ADIF = 0;
  1464     021E  1283               	bcf	3,5	;RP0=0, select bank0
  1465     021F  1303               	bcf	3,6	;RP1=0, select bank0
  1466     0220  130C               	bcf	12,6	;volatile
  1467     0221                     i1l1370:
  1468                           
  1469                           ;main.c: 71:     if (PIR1bits.SSPIF == 1){
  1470     0221  1D8C               	btfss	12,3	;volatile
  1471     0222  2A24               	goto	u87_21
  1472     0223  2A25               	goto	u87_20
  1473     0224                     u87_21:
  1474     0224  2A46               	goto	i1l1384
  1475     0225                     u87_20:
  1476     0225                     i1l1372:
  1477                           
  1478                           ;main.c: 72:         var = spiRead();
  1479     0225  120A  118A  2311  120A  118A  	fcall	_spiRead
  1480     022A  00FA               	movwf	_var
  1481     022B                     i1l1374:
  1482                           
  1483                           ;main.c: 73:         if (var == 1){
  1484     022B  037A               	decf	_var,w
  1485     022C  1D03               	btfss	3,2
  1486     022D  2A2F               	goto	u88_21
  1487     022E  2A30               	goto	u88_20
  1488     022F                     u88_21:
  1489     022F  2A37               	goto	i1l1378
  1490     0230                     u88_20:
  1491     0230                     i1l1376:
  1492                           
  1493                           ;main.c: 74:             spiWrite(contador);
  1494     0230  0878               	movf	_contador,w
  1495     0231  120A  118A  2321  120A  118A  	fcall	_spiWrite
  1496                           
  1497                           ;main.c: 75:         }
  1498     0236  2A43               	goto	i1l1382
  1499     0237                     i1l1378:
  1500     0237  3003               	movlw	3
  1501     0238  067A               	xorwf	_var,w
  1502     0239  1D03               	btfss	3,2
  1503     023A  2A3C               	goto	u89_21
  1504     023B  2A3D               	goto	u89_20
  1505     023C                     u89_21:
  1506     023C  2A43               	goto	i1l1382
  1507     023D                     u89_20:
  1508     023D                     i1l1380:
  1509                           
  1510                           ;main.c: 77:             spiWrite(voltaje1);
  1511     023D  0879               	movf	_voltaje1,w
  1512     023E  120A  118A  2321  120A  118A  	fcall	_spiWrite
  1513     0243                     i1l1382:
  1514                           
  1515                           ;main.c: 79:         PIR1bits.SSPIF = 0;
  1516     0243  1283               	bcf	3,5	;RP0=0, select bank0
  1517     0244  1303               	bcf	3,6	;RP1=0, select bank0
  1518     0245  118C               	bcf	12,3	;volatile
  1519     0246                     i1l1384:
  1520                           
  1521                           ;main.c: 81:     if (INTCONbits.RBIF == 1){
  1522     0246  1C0B               	btfss	11,0	;volatile
  1523     0247  2A49               	goto	u90_21
  1524     0248  2A4A               	goto	u90_20
  1525     0249                     u90_21:
  1526     0249  2A72               	goto	i1l78
  1527     024A                     u90_20:
  1528     024A                     i1l1386:
  1529                           
  1530                           ;main.c: 82:         INTCONbits.RBIF = 0;
  1531     024A  100B               	bcf	11,0	;volatile
  1532                           
  1533                           ;main.c: 83:         if (PORTBbits.RB7 == 0){
  1534     024B  1B86               	btfsc	6,7	;volatile
  1535     024C  2A4E               	goto	u91_21
  1536     024D  2A4F               	goto	u91_20
  1537     024E                     u91_21:
  1538     024E  2A51               	goto	i1l74
  1539     024F                     u91_20:
  1540     024F                     i1l1388:
  1541                           
  1542                           ;main.c: 84:             bandera = 1;
  1543     024F  01F7               	clrf	_bandera
  1544     0250  0AF7               	incf	_bandera,f
  1545     0251                     i1l74:	
  1546                           ;main.c: 85:         }
  1547                           
  1548                           
  1549                           ;main.c: 86:         if (PORTBbits.RB7 == 1 && bandera == 1){
  1550     0251  1F86               	btfss	6,7	;volatile
  1551     0252  2A54               	goto	u92_21
  1552     0253  2A55               	goto	u92_20
  1553     0254                     u92_21:
  1554     0254  2A5F               	goto	i1l1396
  1555     0255                     u92_20:
  1556     0255                     i1l1390:
  1557     0255  0377               	decf	_bandera,w
  1558     0256  1D03               	btfss	3,2
  1559     0257  2A59               	goto	u93_21
  1560     0258  2A5A               	goto	u93_20
  1561     0259                     u93_21:
  1562     0259  2A5F               	goto	i1l1396
  1563     025A                     u93_20:
  1564     025A                     i1l1392:
  1565                           
  1566                           ;main.c: 87:             contador++;
  1567     025A  3001               	movlw	1
  1568     025B  00F4               	movwf	??_isr
  1569     025C  0874               	movf	??_isr,w
  1570     025D  07F8               	addwf	_contador,f
  1571     025E                     i1l1394:
  1572                           
  1573                           ;main.c: 88:             bandera = 0;
  1574     025E  01F7               	clrf	_bandera
  1575     025F                     i1l1396:
  1576                           
  1577                           ;main.c: 90:         if (PORTBbits.RB6 == 0){
  1578     025F  1B06               	btfsc	6,6	;volatile
  1579     0260  2A62               	goto	u94_21
  1580     0261  2A63               	goto	u94_20
  1581     0262                     u94_21:
  1582     0262  2A65               	goto	i1l1400
  1583     0263                     u94_20:
  1584     0263                     i1l1398:
  1585                           
  1586                           ;main.c: 91:             bandera = 2;
  1587     0263  3002               	movlw	2
  1588     0264  00F7               	movwf	_bandera
  1589     0265                     i1l1400:
  1590                           
  1591                           ;main.c: 93:         if (PORTBbits.RB6 == 1 && bandera == 2){
  1592     0265  1F06               	btfss	6,6	;volatile
  1593     0266  2A68               	goto	u95_21
  1594     0267  2A69               	goto	u95_20
  1595     0268                     u95_21:
  1596     0268  2A72               	goto	i1l78
  1597     0269                     u95_20:
  1598     0269                     i1l1402:
  1599     0269  3002               	movlw	2
  1600     026A  0677               	xorwf	_bandera,w
  1601     026B  1D03               	btfss	3,2
  1602     026C  2A6E               	goto	u96_21
  1603     026D  2A6F               	goto	u96_20
  1604     026E                     u96_21:
  1605     026E  2A72               	goto	i1l78
  1606     026F                     u96_20:
  1607     026F                     i1l1404:
  1608                           
  1609                           ;main.c: 94:             contador--;
  1610     026F  3001               	movlw	1
  1611     0270  02F8               	subwf	_contador,f
  1612     0271                     i1l1406:
  1613                           
  1614                           ;main.c: 95:             bandera = 0;
  1615     0271  01F7               	clrf	_bandera
  1616     0272                     i1l78:
  1617     0272  0876               	movf	??_isr+2,w
  1618     0273  008A               	movwf	10
  1619     0274  0E75               	swapf	??_isr+1,w
  1620     0275  0083               	movwf	3
  1621     0276  0EFE               	swapf	btemp,f
  1622     0277  0E7E               	swapf	btemp,w
  1623     0278  0009               	retfie
  1624     0279                     __end_of_isr:
  1625                           
  1626                           	psect	intentry
  1627     0004                     __pintentry:	
  1628                           ;incstack = 0
  1629                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1630                           
  1631     0004                     interrupt_function:
  1632     007E                     saved_w	set	btemp
  1633     0004  00FE               	movwf	btemp
  1634     0005  0E03               	swapf	3,w
  1635     0006  00F5               	movwf	??_isr+1
  1636     0007  080A               	movf	10,w
  1637     0008  00F6               	movwf	??_isr+2
  1638     0009  120A  118A  2A09   	ljmp	_isr
  1639                           
  1640                           	psect	text6
  1641     0110                     __ptext6:	
  1642 ;; *************** function i1_adc_change_channel *****************
  1643 ;; Defined at:
  1644 ;;		line 38 in file "ADC_setup.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  channel         2    0[COMMON] int 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2, status,0
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1658 ;;      Params:         2       0       0       0       0
  1659 ;;      Locals:         0       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0
  1661 ;;      Totals:         2       0       0       0       0
  1662 ;;Total ram usage:        2 bytes
  1663 ;; Hardware stack levels used: 1
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_isr
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671     0110                     i1_adc_change_channel:	
  1672                           ;psect for function i1_adc_change_channel
  1673                           
  1674     0110                     i1l1272:	
  1675                           ;incstack = 0
  1676                           ; Regs used in i1_adc_change_channel: [wreg+status,2+status,0]
  1677                           
  1678                           
  1679                           ;ADC_setup.c: 39:     if(channel == 0){
  1680     0110  0870               	movf	i1adc_change_channel@channel,w
  1681     0111  0471               	iorwf	i1adc_change_channel@channel+1,w
  1682     0112  1D03               	btfss	3,2
  1683     0113  2915               	goto	u71_21
  1684     0114  2916               	goto	u71_20
  1685     0115                     u71_21:
  1686     0115  291F               	goto	i1l1278
  1687     0116                     u71_20:
  1688     0116                     i1l1274:
  1689                           
  1690                           ;ADC_setup.c: 40:         ADCON0bits.CHS = 0b0000;
  1691     0116  30C3               	movlw	-61
  1692     0117  1283               	bcf	3,5	;RP0=0, select bank0
  1693     0118  1303               	bcf	3,6	;RP1=0, select bank0
  1694     0119  059F               	andwf	31,f	;volatile
  1695     011A                     i1l1276:
  1696                           
  1697                           ;ADC_setup.c: 41:         ANSEL = ANSEL | 0b00000001;
  1698     011A  1683               	bsf	3,5	;RP0=1, select bank3
  1699     011B  1703               	bsf	3,6	;RP1=1, select bank3
  1700     011C  0808               	movf	8,w	;volatile
  1701     011D  3801               	iorlw	1
  1702     011E  0088               	movwf	8	;volatile
  1703     011F                     i1l1278:
  1704                           
  1705                           ;ADC_setup.c: 43:     if(channel == 1){
  1706     011F  0370               	decf	i1adc_change_channel@channel,w
  1707     0120  0471               	iorwf	i1adc_change_channel@channel+1,w
  1708     0121  1D03               	btfss	3,2
  1709     0122  2924               	goto	u72_21
  1710     0123  2925               	goto	u72_20
  1711     0124                     u72_21:
  1712     0124  2930               	goto	i1l1284
  1713     0125                     u72_20:
  1714     0125                     i1l1280:
  1715                           
  1716                           ;ADC_setup.c: 44:         ADCON0bits.CHS = 0b0001;
  1717     0125  1283               	bcf	3,5	;RP0=0, select bank0
  1718     0126  1303               	bcf	3,6	;RP1=0, select bank0
  1719     0127  081F               	movf	31,w	;volatile
  1720     0128  39C3               	andlw	-61
  1721     0129  3804               	iorlw	4
  1722     012A  009F               	movwf	31	;volatile
  1723     012B                     i1l1282:
  1724                           
  1725                           ;ADC_setup.c: 45:         ANSEL = ANSEL | 0b00000010;
  1726     012B  1683               	bsf	3,5	;RP0=1, select bank3
  1727     012C  1703               	bsf	3,6	;RP1=1, select bank3
  1728     012D  0808               	movf	8,w	;volatile
  1729     012E  3802               	iorlw	2
  1730     012F  0088               	movwf	8	;volatile
  1731     0130                     i1l1284:
  1732                           
  1733                           ;ADC_setup.c: 47:     if(channel == 2){
  1734     0130  3002               	movlw	2
  1735     0131  0670               	xorwf	i1adc_change_channel@channel,w
  1736     0132  0471               	iorwf	i1adc_change_channel@channel+1,w
  1737     0133  1D03               	btfss	3,2
  1738     0134  2936               	goto	u73_21
  1739     0135  2937               	goto	u73_20
  1740     0136                     u73_21:
  1741     0136  2942               	goto	i1l1290
  1742     0137                     u73_20:
  1743     0137                     i1l1286:
  1744                           
  1745                           ;ADC_setup.c: 48:         ADCON0bits.CHS = 0b0010;
  1746     0137  1283               	bcf	3,5	;RP0=0, select bank0
  1747     0138  1303               	bcf	3,6	;RP1=0, select bank0
  1748     0139  081F               	movf	31,w	;volatile
  1749     013A  39C3               	andlw	-61
  1750     013B  3808               	iorlw	8
  1751     013C  009F               	movwf	31	;volatile
  1752     013D                     i1l1288:
  1753                           
  1754                           ;ADC_setup.c: 49:         ANSEL = ANSEL | 0b00000100;
  1755     013D  1683               	bsf	3,5	;RP0=1, select bank3
  1756     013E  1703               	bsf	3,6	;RP1=1, select bank3
  1757     013F  0808               	movf	8,w	;volatile
  1758     0140  3804               	iorlw	4
  1759     0141  0088               	movwf	8	;volatile
  1760     0142                     i1l1290:
  1761                           
  1762                           ;ADC_setup.c: 51:     if(channel == 3){
  1763     0142  3003               	movlw	3
  1764     0143  0670               	xorwf	i1adc_change_channel@channel,w
  1765     0144  0471               	iorwf	i1adc_change_channel@channel+1,w
  1766     0145  1D03               	btfss	3,2
  1767     0146  2948               	goto	u74_21
  1768     0147  2949               	goto	u74_20
  1769     0148                     u74_21:
  1770     0148  2954               	goto	i1l1296
  1771     0149                     u74_20:
  1772     0149                     i1l1292:
  1773                           
  1774                           ;ADC_setup.c: 52:         ADCON0bits.CHS = 0b0011;
  1775     0149  1283               	bcf	3,5	;RP0=0, select bank0
  1776     014A  1303               	bcf	3,6	;RP1=0, select bank0
  1777     014B  081F               	movf	31,w	;volatile
  1778     014C  39C3               	andlw	-61
  1779     014D  380C               	iorlw	12
  1780     014E  009F               	movwf	31	;volatile
  1781     014F                     i1l1294:
  1782                           
  1783                           ;ADC_setup.c: 53:         ANSEL = ANSEL | 0b00001000;
  1784     014F  1683               	bsf	3,5	;RP0=1, select bank3
  1785     0150  1703               	bsf	3,6	;RP1=1, select bank3
  1786     0151  0808               	movf	8,w	;volatile
  1787     0152  3808               	iorlw	8
  1788     0153  0088               	movwf	8	;volatile
  1789     0154                     i1l1296:
  1790                           
  1791                           ;ADC_setup.c: 55:     if(channel == 4){
  1792     0154  3004               	movlw	4
  1793     0155  0670               	xorwf	i1adc_change_channel@channel,w
  1794     0156  0471               	iorwf	i1adc_change_channel@channel+1,w
  1795     0157  1D03               	btfss	3,2
  1796     0158  295A               	goto	u75_21
  1797     0159  295B               	goto	u75_20
  1798     015A                     u75_21:
  1799     015A  2966               	goto	i1l1302
  1800     015B                     u75_20:
  1801     015B                     i1l1298:
  1802                           
  1803                           ;ADC_setup.c: 56:         ADCON0bits.CHS = 0b0100;
  1804     015B  1283               	bcf	3,5	;RP0=0, select bank0
  1805     015C  1303               	bcf	3,6	;RP1=0, select bank0
  1806     015D  081F               	movf	31,w	;volatile
  1807     015E  39C3               	andlw	-61
  1808     015F  3810               	iorlw	16
  1809     0160  009F               	movwf	31	;volatile
  1810     0161                     i1l1300:
  1811                           
  1812                           ;ADC_setup.c: 57:         ANSEL = ANSEL | 0b00010000;
  1813     0161  1683               	bsf	3,5	;RP0=1, select bank3
  1814     0162  1703               	bsf	3,6	;RP1=1, select bank3
  1815     0163  0808               	movf	8,w	;volatile
  1816     0164  3810               	iorlw	16
  1817     0165  0088               	movwf	8	;volatile
  1818     0166                     i1l1302:
  1819                           
  1820                           ;ADC_setup.c: 59:     if(channel == 5){
  1821     0166  3005               	movlw	5
  1822     0167  0670               	xorwf	i1adc_change_channel@channel,w
  1823     0168  0471               	iorwf	i1adc_change_channel@channel+1,w
  1824     0169  1D03               	btfss	3,2
  1825     016A  296C               	goto	u76_21
  1826     016B  296D               	goto	u76_20
  1827     016C                     u76_21:
  1828     016C  2978               	goto	i1l1308
  1829     016D                     u76_20:
  1830     016D                     i1l1304:
  1831                           
  1832                           ;ADC_setup.c: 60:         ADCON0bits.CHS = 0b0101;
  1833     016D  1283               	bcf	3,5	;RP0=0, select bank0
  1834     016E  1303               	bcf	3,6	;RP1=0, select bank0
  1835     016F  081F               	movf	31,w	;volatile
  1836     0170  39C3               	andlw	-61
  1837     0171  3814               	iorlw	20
  1838     0172  009F               	movwf	31	;volatile
  1839     0173                     i1l1306:
  1840                           
  1841                           ;ADC_setup.c: 61:         ANSEL = ANSEL | 0b00100000;
  1842     0173  1683               	bsf	3,5	;RP0=1, select bank3
  1843     0174  1703               	bsf	3,6	;RP1=1, select bank3
  1844     0175  0808               	movf	8,w	;volatile
  1845     0176  3820               	iorlw	32
  1846     0177  0088               	movwf	8	;volatile
  1847     0178                     i1l1308:
  1848                           
  1849                           ;ADC_setup.c: 63:     if(channel == 6){
  1850     0178  3006               	movlw	6
  1851     0179  0670               	xorwf	i1adc_change_channel@channel,w
  1852     017A  0471               	iorwf	i1adc_change_channel@channel+1,w
  1853     017B  1D03               	btfss	3,2
  1854     017C  297E               	goto	u77_21
  1855     017D  297F               	goto	u77_20
  1856     017E                     u77_21:
  1857     017E  298A               	goto	i1l1314
  1858     017F                     u77_20:
  1859     017F                     i1l1310:
  1860                           
  1861                           ;ADC_setup.c: 64:         ADCON0bits.CHS = 0b0110;
  1862     017F  1283               	bcf	3,5	;RP0=0, select bank0
  1863     0180  1303               	bcf	3,6	;RP1=0, select bank0
  1864     0181  081F               	movf	31,w	;volatile
  1865     0182  39C3               	andlw	-61
  1866     0183  3818               	iorlw	24
  1867     0184  009F               	movwf	31	;volatile
  1868     0185                     i1l1312:
  1869                           
  1870                           ;ADC_setup.c: 65:         ANSEL = ANSEL | 0b01000000;
  1871     0185  1683               	bsf	3,5	;RP0=1, select bank3
  1872     0186  1703               	bsf	3,6	;RP1=1, select bank3
  1873     0187  0808               	movf	8,w	;volatile
  1874     0188  3840               	iorlw	64
  1875     0189  0088               	movwf	8	;volatile
  1876     018A                     i1l1314:
  1877                           
  1878                           ;ADC_setup.c: 67:     if(channel == 7){
  1879     018A  3007               	movlw	7
  1880     018B  0670               	xorwf	i1adc_change_channel@channel,w
  1881     018C  0471               	iorwf	i1adc_change_channel@channel+1,w
  1882     018D  1D03               	btfss	3,2
  1883     018E  2990               	goto	u78_21
  1884     018F  2991               	goto	u78_20
  1885     0190                     u78_21:
  1886     0190  299C               	goto	i1l1320
  1887     0191                     u78_20:
  1888     0191                     i1l1316:
  1889                           
  1890                           ;ADC_setup.c: 68:         ADCON0bits.CHS = 0b0111;
  1891     0191  1283               	bcf	3,5	;RP0=0, select bank0
  1892     0192  1303               	bcf	3,6	;RP1=0, select bank0
  1893     0193  081F               	movf	31,w	;volatile
  1894     0194  39C3               	andlw	-61
  1895     0195  381C               	iorlw	28
  1896     0196  009F               	movwf	31	;volatile
  1897     0197                     i1l1318:
  1898                           
  1899                           ;ADC_setup.c: 69:         ANSEL = ANSEL | 0b10000000;
  1900     0197  1683               	bsf	3,5	;RP0=1, select bank3
  1901     0198  1703               	bsf	3,6	;RP1=1, select bank3
  1902     0199  0808               	movf	8,w	;volatile
  1903     019A  3880               	iorlw	128
  1904     019B  0088               	movwf	8	;volatile
  1905     019C                     i1l1320:
  1906                           
  1907                           ;ADC_setup.c: 71:     if(channel == 8){
  1908     019C  3008               	movlw	8
  1909     019D  0670               	xorwf	i1adc_change_channel@channel,w
  1910     019E  0471               	iorwf	i1adc_change_channel@channel+1,w
  1911     019F  1D03               	btfss	3,2
  1912     01A0  29A2               	goto	u79_21
  1913     01A1  29A3               	goto	u79_20
  1914     01A2                     u79_21:
  1915     01A2  29AE               	goto	i1l1326
  1916     01A3                     u79_20:
  1917     01A3                     i1l1322:
  1918                           
  1919                           ;ADC_setup.c: 72:         ADCON0bits.CHS = 0b1000;
  1920     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1921     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1922     01A5  081F               	movf	31,w	;volatile
  1923     01A6  39C3               	andlw	-61
  1924     01A7  3820               	iorlw	32
  1925     01A8  009F               	movwf	31	;volatile
  1926     01A9                     i1l1324:
  1927                           
  1928                           ;ADC_setup.c: 73:         ANSELH = ANSELH | 0b00000001;
  1929     01A9  1683               	bsf	3,5	;RP0=1, select bank3
  1930     01AA  1703               	bsf	3,6	;RP1=1, select bank3
  1931     01AB  0809               	movf	9,w	;volatile
  1932     01AC  3801               	iorlw	1
  1933     01AD  0089               	movwf	9	;volatile
  1934     01AE                     i1l1326:
  1935                           
  1936                           ;ADC_setup.c: 75:     if(channel == 9){
  1937     01AE  3009               	movlw	9
  1938     01AF  0670               	xorwf	i1adc_change_channel@channel,w
  1939     01B0  0471               	iorwf	i1adc_change_channel@channel+1,w
  1940     01B1  1D03               	btfss	3,2
  1941     01B2  29B4               	goto	u80_21
  1942     01B3  29B5               	goto	u80_20
  1943     01B4                     u80_21:
  1944     01B4  29C0               	goto	i1l1332
  1945     01B5                     u80_20:
  1946     01B5                     i1l1328:
  1947                           
  1948                           ;ADC_setup.c: 76:         ADCON0bits.CHS = 0b1001;
  1949     01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1950     01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1951     01B7  081F               	movf	31,w	;volatile
  1952     01B8  39C3               	andlw	-61
  1953     01B9  3824               	iorlw	36
  1954     01BA  009F               	movwf	31	;volatile
  1955     01BB                     i1l1330:
  1956                           
  1957                           ;ADC_setup.c: 77:         ANSELH = ANSELH | 0b00000010;
  1958     01BB  1683               	bsf	3,5	;RP0=1, select bank3
  1959     01BC  1703               	bsf	3,6	;RP1=1, select bank3
  1960     01BD  0809               	movf	9,w	;volatile
  1961     01BE  3802               	iorlw	2
  1962     01BF  0089               	movwf	9	;volatile
  1963     01C0                     i1l1332:
  1964                           
  1965                           ;ADC_setup.c: 79:     if(channel == 10){
  1966     01C0  300A               	movlw	10
  1967     01C1  0670               	xorwf	i1adc_change_channel@channel,w
  1968     01C2  0471               	iorwf	i1adc_change_channel@channel+1,w
  1969     01C3  1D03               	btfss	3,2
  1970     01C4  29C6               	goto	u81_21
  1971     01C5  29C7               	goto	u81_20
  1972     01C6                     u81_21:
  1973     01C6  29D2               	goto	i1l1338
  1974     01C7                     u81_20:
  1975     01C7                     i1l1334:
  1976                           
  1977                           ;ADC_setup.c: 80:         ADCON0bits.CHS = 0b1010;
  1978     01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1979     01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1980     01C9  081F               	movf	31,w	;volatile
  1981     01CA  39C3               	andlw	-61
  1982     01CB  3828               	iorlw	40
  1983     01CC  009F               	movwf	31	;volatile
  1984     01CD                     i1l1336:
  1985                           
  1986                           ;ADC_setup.c: 81:         ANSELH = ANSELH | 0b00000100;
  1987     01CD  1683               	bsf	3,5	;RP0=1, select bank3
  1988     01CE  1703               	bsf	3,6	;RP1=1, select bank3
  1989     01CF  0809               	movf	9,w	;volatile
  1990     01D0  3804               	iorlw	4
  1991     01D1  0089               	movwf	9	;volatile
  1992     01D2                     i1l1338:
  1993                           
  1994                           ;ADC_setup.c: 83:     if(channel == 11){
  1995     01D2  300B               	movlw	11
  1996     01D3  0670               	xorwf	i1adc_change_channel@channel,w
  1997     01D4  0471               	iorwf	i1adc_change_channel@channel+1,w
  1998     01D5  1D03               	btfss	3,2
  1999     01D6  29D8               	goto	u82_21
  2000     01D7  29D9               	goto	u82_20
  2001     01D8                     u82_21:
  2002     01D8  29E4               	goto	i1l1344
  2003     01D9                     u82_20:
  2004     01D9                     i1l1340:
  2005                           
  2006                           ;ADC_setup.c: 84:         ADCON0bits.CHS = 0b1011;
  2007     01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2008     01DA  1303               	bcf	3,6	;RP1=0, select bank0
  2009     01DB  081F               	movf	31,w	;volatile
  2010     01DC  39C3               	andlw	-61
  2011     01DD  382C               	iorlw	44
  2012     01DE  009F               	movwf	31	;volatile
  2013     01DF                     i1l1342:
  2014                           
  2015                           ;ADC_setup.c: 85:         ANSELH = ANSELH | 0b00001000;
  2016     01DF  1683               	bsf	3,5	;RP0=1, select bank3
  2017     01E0  1703               	bsf	3,6	;RP1=1, select bank3
  2018     01E1  0809               	movf	9,w	;volatile
  2019     01E2  3808               	iorlw	8
  2020     01E3  0089               	movwf	9	;volatile
  2021     01E4                     i1l1344:
  2022                           
  2023                           ;ADC_setup.c: 87:     if(channel == 12){
  2024     01E4  300C               	movlw	12
  2025     01E5  0670               	xorwf	i1adc_change_channel@channel,w
  2026     01E6  0471               	iorwf	i1adc_change_channel@channel+1,w
  2027     01E7  1D03               	btfss	3,2
  2028     01E8  29EA               	goto	u83_21
  2029     01E9  29EB               	goto	u83_20
  2030     01EA                     u83_21:
  2031     01EA  29F6               	goto	i1l1350
  2032     01EB                     u83_20:
  2033     01EB                     i1l1346:
  2034                           
  2035                           ;ADC_setup.c: 88:         ADCON0bits.CHS = 0b1100;
  2036     01EB  1283               	bcf	3,5	;RP0=0, select bank0
  2037     01EC  1303               	bcf	3,6	;RP1=0, select bank0
  2038     01ED  081F               	movf	31,w	;volatile
  2039     01EE  39C3               	andlw	-61
  2040     01EF  3830               	iorlw	48
  2041     01F0  009F               	movwf	31	;volatile
  2042     01F1                     i1l1348:
  2043                           
  2044                           ;ADC_setup.c: 89:         ANSELH = ANSELH | 0b00010000;
  2045     01F1  1683               	bsf	3,5	;RP0=1, select bank3
  2046     01F2  1703               	bsf	3,6	;RP1=1, select bank3
  2047     01F3  0809               	movf	9,w	;volatile
  2048     01F4  3810               	iorlw	16
  2049     01F5  0089               	movwf	9	;volatile
  2050     01F6                     i1l1350:
  2051                           
  2052                           ;ADC_setup.c: 91:     if(channel == 13){
  2053     01F6  300D               	movlw	13
  2054     01F7  0670               	xorwf	i1adc_change_channel@channel,w
  2055     01F8  0471               	iorwf	i1adc_change_channel@channel+1,w
  2056     01F9  1D03               	btfss	3,2
  2057     01FA  29FC               	goto	u84_21
  2058     01FB  29FD               	goto	u84_20
  2059     01FC                     u84_21:
  2060     01FC  2A08               	goto	i1l156
  2061     01FD                     u84_20:
  2062     01FD                     i1l1352:
  2063                           
  2064                           ;ADC_setup.c: 92:         ADCON0bits.CHS = 0b1101;
  2065     01FD  1283               	bcf	3,5	;RP0=0, select bank0
  2066     01FE  1303               	bcf	3,6	;RP1=0, select bank0
  2067     01FF  081F               	movf	31,w	;volatile
  2068     0200  39C3               	andlw	-61
  2069     0201  3834               	iorlw	52
  2070     0202  009F               	movwf	31	;volatile
  2071     0203                     i1l1354:
  2072                           
  2073                           ;ADC_setup.c: 93:         ANSELH = ANSELH | 0b00100000;
  2074     0203  1683               	bsf	3,5	;RP0=1, select bank3
  2075     0204  1703               	bsf	3,6	;RP1=1, select bank3
  2076     0205  0809               	movf	9,w	;volatile
  2077     0206  3820               	iorlw	32
  2078     0207  0089               	movwf	9	;volatile
  2079     0208                     i1l156:
  2080     0208  0008               	return
  2081     0209                     __end_ofi1_adc_change_channel:
  2082                           
  2083                           	psect	text7
  2084     0321                     __ptext7:	
  2085 ;; *************** function _spiWrite *****************
  2086 ;; Defined at:
  2087 ;;		line 34 in file "SPI.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  dat             1    wreg     unsigned char 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  dat             1    0[COMMON] unsigned char 
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2101 ;;      Params:         0       0       0       0       0
  2102 ;;      Locals:         1       0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0
  2104 ;;      Totals:         1       0       0       0       0
  2105 ;;Total ram usage:        1 bytes
  2106 ;; Hardware stack levels used: 1
  2107 ;; This function calls:
  2108 ;;		Nothing
  2109 ;; This function is called by:
  2110 ;;		_isr
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114     0321                     _spiWrite:	
  2115                           ;psect for function _spiWrite
  2116                           
  2117                           
  2118                           ;incstack = 0
  2119                           ; Regs used in _spiWrite: [wreg]
  2120                           ;spiWrite@dat stored from wreg
  2121     0321  00F0               	movwf	spiWrite@dat
  2122     0322                     i1l922:
  2123                           
  2124                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  2125     0322  0870               	movf	spiWrite@dat,w
  2126     0323  1283               	bcf	3,5	;RP0=0, select bank0
  2127     0324  1303               	bcf	3,6	;RP1=0, select bank0
  2128     0325  0093               	movwf	19	;volatile
  2129     0326                     i1l107:
  2130     0326  0008               	return
  2131     0327                     __end_of_spiWrite:
  2132                           
  2133                           	psect	text8
  2134     0311                     __ptext8:	
  2135 ;; *************** function _spiRead *****************
  2136 ;; Defined at:
  2137 ;;		line 47 in file "SPI.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;		None
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;		None
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      unsigned char 
  2144 ;; Registers used:
  2145 ;;		wreg, status,2, status,0, pclath, cstack
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2151 ;;      Params:         0       0       0       0       0
  2152 ;;      Locals:         0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0
  2154 ;;      Totals:         0       0       0       0       0
  2155 ;;Total ram usage:        0 bytes
  2156 ;; Hardware stack levels used: 1
  2157 ;; Hardware stack levels required when called: 1
  2158 ;; This function calls:
  2159 ;;		_spiReceiveWait
  2160 ;; This function is called by:
  2161 ;;		_isr
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165     0311                     _spiRead:	
  2166                           ;psect for function _spiRead
  2167                           
  2168     0311                     i1l916:	
  2169                           ;incstack = 0
  2170                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2171                           
  2172                           
  2173                           ;SPI.c: 49:     spiReceiveWait();
  2174     0311  120A  118A  231A  120A  118A  	fcall	_spiReceiveWait
  2175     0316                     i1l918:
  2176                           
  2177                           ;SPI.c: 50:     return(SSPBUF);
  2178     0316  1283               	bcf	3,5	;RP0=0, select bank0
  2179     0317  1303               	bcf	3,6	;RP1=0, select bank0
  2180     0318  0813               	movf	19,w	;volatile
  2181     0319                     i1l115:
  2182     0319  0008               	return
  2183     031A                     __end_of_spiRead:
  2184                           
  2185                           	psect	text9
  2186     031A                     __ptext9:	
  2187 ;; *************** function _spiReceiveWait *****************
  2188 ;; Defined at:
  2189 ;;		line 29 in file "SPI.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;		None
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		None
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2203 ;;      Params:         0       0       0       0       0
  2204 ;;      Locals:         0       0       0       0       0
  2205 ;;      Temps:          0       0       0       0       0
  2206 ;;      Totals:         0       0       0       0       0
  2207 ;;Total ram usage:        0 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; This function calls:
  2210 ;;		Nothing
  2211 ;; This function is called by:
  2212 ;;		_spiRead
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216     031A                     _spiReceiveWait:	
  2217                           ;psect for function _spiReceiveWait
  2218                           
  2219     031A                     i1l862:	
  2220                           ;incstack = 0
  2221                           ; Regs used in _spiReceiveWait: []
  2222                           
  2223     031A                     i1l101:	
  2224                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  2225                           
  2226     031A  1683               	bsf	3,5	;RP0=1, select bank1
  2227     031B  1303               	bcf	3,6	;RP1=0, select bank1
  2228     031C  1C14               	btfss	20,0	;volatile
  2229     031D  2B1F               	goto	u16_21
  2230     031E  2B20               	goto	u16_20
  2231     031F                     u16_21:
  2232     031F  2B1A               	goto	i1l101
  2233     0320                     u16_20:
  2234     0320                     i1l104:
  2235     0320  0008               	return
  2236     0321                     __end_of_spiReceiveWait:
  2237                           
  2238                           	psect	text10
  2239     0307                     __ptext10:	
  2240 ;; *************** function _adc_read *****************
  2241 ;; Defined at:
  2242 ;;		line 34 in file "ADC_setup.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  2    0[COMMON] int 
  2249 ;; Registers used:
  2250 ;;		wreg
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2256 ;;      Params:         2       0       0       0       0
  2257 ;;      Locals:         0       0       0       0       0
  2258 ;;      Temps:          2       0       0       0       0
  2259 ;;      Totals:         4       0       0       0       0
  2260 ;;Total ram usage:        4 bytes
  2261 ;; Hardware stack levels used: 1
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_isr
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269     0307                     _adc_read:	
  2270                           ;psect for function _adc_read
  2271                           
  2272     0307                     i1l1268:	
  2273                           ;incstack = 0
  2274                           ; Regs used in _adc_read: [wreg]
  2275                           
  2276                           
  2277                           ;ADC_setup.c: 35:     return ADRESH;
  2278     0307  1283               	bcf	3,5	;RP0=0, select bank0
  2279     0308  1303               	bcf	3,6	;RP1=0, select bank0
  2280     0309  081E               	movf	30,w	;volatile
  2281     030A  00F2               	movwf	??_adc_read
  2282     030B  01F3               	clrf	??_adc_read+1
  2283     030C  0872               	movf	??_adc_read,w
  2284     030D  00F0               	movwf	?_adc_read
  2285     030E  0873               	movf	??_adc_read+1,w
  2286     030F  00F1               	movwf	?_adc_read+1
  2287     0310                     i1l139:
  2288     0310  0008               	return
  2289     0311                     __end_of_adc_read:
  2290     007E                     btemp	set	126	;btemp
  2291     007E                     wtemp0	set	126
  2292                           
  2293                           	psect	idloc
  2294                           
  2295                           ;Config register IDLOC0 @ 0x2000
  2296                           ;	unspecified, using default values
  2297     2000                     	org	8192
  2298     2000  3FFF               	dw	16383
  2299                           
  2300                           ;Config register IDLOC1 @ 0x2001
  2301                           ;	unspecified, using default values
  2302     2001                     	org	8193
  2303     2001  3FFF               	dw	16383
  2304                           
  2305                           ;Config register IDLOC2 @ 0x2002
  2306                           ;	unspecified, using default values
  2307     2002                     	org	8194
  2308     2002  3FFF               	dw	16383
  2309                           
  2310                           ;Config register IDLOC3 @ 0x2003
  2311                           ;	unspecified, using default values
  2312     2003                     	org	8195
  2313     2003  3FFF               	dw	16383
  2314                           
  2315                           	psect	config
  2316                           
  2317                           ;Config register CONFIG1 @ 0x2007
  2318                           ;	Oscillator Selection bits
  2319                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2320                           ;	Watchdog Timer Enable bit
  2321                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2322                           ;	Power-up Timer Enable bit
  2323                           ;	PWRTE = OFF, PWRT disabled
  2324                           ;	RE3/MCLR pin function select bit
  2325                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2326                           ;	Code Protection bit
  2327                           ;	CP = OFF, Program memory code protection is disabled
  2328                           ;	Data Code Protection bit
  2329                           ;	CPD = OFF, Data memory code protection is disabled
  2330                           ;	Brown Out Reset Selection bits
  2331                           ;	BOREN = OFF, BOR disabled
  2332                           ;	Internal External Switchover bit
  2333                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2334                           ;	Fail-Safe Clock Monitor Enabled bit
  2335                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2336                           ;	Low Voltage Programming Enable bit
  2337                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2338                           ;	In-Circuit Debugger Mode bit
  2339                           ;	DEBUG = 0x1, unprogramme  2340     2007                     	org	8199
  2341     2007  20D4               	dw	8404
  2342                           
  2343                           ;Config register CONFIG2 @ 0x2008
  2344                           ;	Brown-out Reset Selection bit
  2345                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2346                           ;	Flash Program Memory Self Write Enable bits
  2347                           ;	WRT = OFF, Write protection off
  2348     2008                     	org	8200
  2349     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      5       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_adc_read

Critical Paths under _main in BANK0

    _main->_adc_init
    _setup->_spiInit
    _adc_init->_adc_change_channel

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1156
                           _adc_init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             3     1      2     700
                                              2 BANK0      3     1      2
                 _adc_change_channel
 ---------------------------------------------------------------------------------
 (2) _adc_change_channel                                   2     0      2     579
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0     349
                                              4 COMMON     3     3      0
                           _adc_read
                            _spiRead
                           _spiWrite
               i1_adc_change_channel
 ---------------------------------------------------------------------------------
 (4) i1_adc_change_channel                                 2     0      2     334
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _adc_read                                             4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
     _adc_change_channel
   _setup
     _spiInit

 _isr (ROOT)
   _adc_read
   _spiRead
     _spiReceiveWait
   _spiWrite
   i1_adc_change_channel

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       5       5        6.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Aug 02 22:37:11 2023

                 _SSPSTATbits 0094                            l81 02AB                            l97 02E7  
                          l98 02EC                           l136 02CE                           l156 010F  
                         u970 001F                           u971 001E                           u980 002E  
                         u981 002D                           u990 0040                           u991 003F  
                         _isr 0209                           _var 007A                          l1410 001F  
                        l1420 0037                          l1412 0021                          l1500 02E6  
                        l1430 0056                          l1422 0040                          l1414 0026  
                        l1510 0282                          l1502 0279                          l1440 0076  
                        l1432 005B                          l1424 0044                          l1416 002E  
                        l1408 0017                          l1520 028E                          l1512 0288  
                        l1504 027D                          l1450 0091                          l1442 007A  
                        l1434 0064                          l1426 0049                          l1418 0032  
                        l1530 0293                          l1522 028F                          l1514 028B  
                        l1506 027E                          l1460 00B0                          l1452 009A  
                        l1444 007F                          l1436 0068                          l1428 0052  
                        l1540 029F                          l1532 0294                          l1524 0290  
                        l1516 028C                          l1508 0281                          l1470 00D0  
                        l1462 00B5                          l1454 009E                          l1446 0088  
                        l1438 006D                          l1542 02AC                          l1534 0297  
                        l1526 0291                          l1518 028D                          l1550 02ED  
                        l1480 00EB                          l1472 00D4                          l1464 00BE  
                        l1456 00A3                          l1448 008C                          l1544 02B9  
                        l1536 029A                          l1528 0292                          l1552 02FC  
                        l1490 010A                          l1482 00F4                          l1474 00D9  
                        l1466 00C2                          l1458 00AC                          l1546 02C4  
                        l1538 029E                          l1554 0302                          l1484 00F8  
                        l1476 00E2                          l1468 00C7                          l1548 02C7  
                        l1492 02D2                          l1486 00FD                          l1478 00E6  
                        l1494 02DB                          l1488 0106                          l1496 02DF  
                        l1498 02E1                          ?_isr 0070                          u1000 0052  
                        u1001 0051                          u1010 0064                          u1011 0063  
                        u1100 0106                          u1020 0076                          u1101 0105  
                        u1021 0075                          u1030 0088                          u1110 02DB  
                        u1031 0087                          u1111 02DA                          u1040 009A  
                        u1120 0302                          u1041 0099                          u1121 0301  
                        u1050 00AC                          u1051 00AB                          u1060 00BE  
                        u1061 00BD                          u1070 00D0                          u1071 00CF  
                        u1080 00E2                          u1081 00E1                          u1137 02CB  
                        u1090 00F4                          u1091 00F3                          i1l74 0251  
                        i1l78 0272                          _main 02ED                          btemp 007E  
                        start 000C                         ??_isr 0074                         ?_main 0070  
                       _ANSEL 0188                         i1l101 031A                         i1l104 0320  
                       i1l115 0319                         i1l107 0326                         i1l139 0310  
                       i1l156 0208                         i1l922 0322                         i1l916 0311  
                       i1l862 031A                         i1l918 0316                         u16_20 0320  
                       u16_21 031F                         _PORTB 0006                         _PORTD 0008  
                       u71_20 0116                         u71_21 0115                         u80_20 01B5  
                       u72_20 0125                         u80_21 01B4                         u72_21 0124  
                       u81_20 01C7                         u73_20 0137                         u81_21 01C6  
                       u73_21 0136                         _TRISD 0088                         u82_20 01D9  
                       u74_20 0149                         u90_20 024A                         u82_21 01D8  
                       u74_21 0148                         u90_21 0249                         u83_20 01EB  
                       u75_20 015B                         u91_20 024F                         u83_21 01EA  
                       u75_21 015A                         u91_21 024E                         u84_20 01FD  
                       u76_20 016D                         u92_20 0255                         u84_21 01FC  
                       u76_21 016C                         u92_21 0254                         u77_20 017F  
                       u93_20 025A                         u77_21 017E                         u93_21 0259  
                       u78_20 0191                         u94_20 0263                         u86_20 020F  
                       u78_21 0190                         u94_21 0262                         u86_21 020E  
                       u79_20 01A3                         u95_20 0269                         u87_20 0225  
                       u79_21 01A2                         u95_21 0268                         u87_21 0224  
                       u96_20 026F                         u88_20 0230                         u96_21 026E  
                       u88_21 022F                         u89_20 023D                         u89_21 023C  
                       _setup 0279                         pclath 000A               __end_of_spiInit 02ED  
             __end_of_spiRead 031A                         status 0003                         wtemp0 007E  
             __initialization 000F                  __end_of_main 0307                        ??_main 0025  
                      _ADRESH 001E                        ?_setup 0070                        _ANSELH 0189  
            __end_of_adc_init 02CF              __end_of_adc_read 0311                        i1l1300 0161  
                      i1l1310 017F                        i1l1302 0166                        i1l1320 019C  
                      i1l1312 0185                        i1l1304 016D                        i1l1400 0265  
                      i1l1330 01BB                        i1l1322 01A3                        i1l1314 018A  
                      i1l1306 0173                        i1l1402 0269                        i1l1340 01D9  
                      i1l1332 01C0                        i1l1324 01A9                        i1l1316 0191  
                      i1l1308 0178                        i1l1404 026F                        i1l1350 01F6  
                      i1l1342 01DF                        i1l1334 01C7                        i1l1326 01AE  
                      i1l1318 0197                        i1l1406 0271                        i1l1352 01FD  
                      i1l1344 01E4                        i1l1336 01CD                        i1l1328 01B5  
                      i1l1280 0125                        i1l1272 0110                        i1l1354 0203  
                      i1l1346 01EB                        i1l1338 01D2                        i1l1290 0142  
                      i1l1282 012B                        i1l1274 0116                        i1l1370 0221  
                      i1l1362 0209                        i1l1268 0307                        i1l1348 01F1  
                      i1l1292 0149                        i1l1284 0130                        i1l1276 011A  
                      i1l1380 023D                        i1l1372 0225                        i1l1364 020F  
                      i1l1294 014F                        i1l1286 0137                        i1l1278 011F  
                      i1l1390 0255                        i1l1382 0243                        i1l1374 022B  
                      i1l1366 0216                        i1l1296 0154                        i1l1288 013D  
                      i1l1392 025A                        i1l1376 0230                        i1l1384 0246  
                      i1l1368 021E                        i1l1298 015B                        i1l1394 025E  
                      i1l1386 024A                        i1l1378 0237                        i1l1396 025F  
                      i1l1388 024F                        i1l1398 0263                        _TRISC3 043B  
                      _TRISC5 043D                        _SSPCON 0014                        _SSPBUF 0013  
   adc_change_channel@channel 0020                        saved_w 007E              __end_of_spiWrite 0327  
                   ??_spiInit 0023                     ??_spiRead 0070       __end_of__initialization 0013  
              __pcstackCOMMON 0070                 __end_of_setup 02AC   i1adc_change_channel@channel 0070  
              _OPTION_REGbits 0081                       ??_setup 0024                    __pmaintext 02ED  
                  __pintentry 0004                     ?_adc_init 0022                     ?_adc_read 0070  
                     _SSPSTAT 0094                     ?_spiWrite 0070                       _bandera 0077  
__end_ofi1_adc_change_channel 0209                     _ANSELbits 0188                    ??_adc_init 0024  
                  ??_adc_read 0072                       __ptext1 0279                       __ptext2 02CF  
                     __ptext3 02AC                       __ptext4 0017                       __ptext5 0209  
                     __ptext6 0110                       __ptext7 0321                       __ptext8 0311  
                     __ptext9 031A                       _spiInit 02CF                       _spiRead 0311  
        end_of_initialization 0013                    ??_spiWrite 0070                     _PORTBbits 0006  
                   _TRISAbits 0085                     _TRISBbits 0086                   spiWrite@dat 0070  
              _spiReceiveWait 031A    __end_of_adc_change_channel 0110           start_initialization 000F  
                 __end_of_isr 0279          i1_adc_change_channel 0110        __end_of_spiReceiveWait 0321  
             adc_init@channel 0022                   __pbssCOMMON 0077                     ___latbits 0002  
               __pcstackBANK0 0020         ?i1_adc_change_channel 0070               ?_spiReceiveWait 0070  
                    ?_spiInit 0020                      ?_spiRead 0070          spiInit@sTransmitEdge 0022  
           interrupt_function 0004                      _IOCBbits 0096                      _PIE1bits 008C  
          spiInit@sDataSample 0020                      _PIR1bits 000C                    _ADCON0bits 001F  
                  _ADCON1bits 009F                      _WPUBbits 0095        ??i1_adc_change_channel 0072  
                    _adc_init 02AC                      _adc_read 0307                      __ptext10 0307  
                    _contador 0078            _adc_change_channel 0017           ?_adc_change_channel 0020  
                    _spiWrite 0321                  spiInit@sType 0023             spiInit@sClockIdle 0021  
                    _voltaje1 0079                    _INTCONbits 000B          ??_adc_change_channel 0022  
                    intlevel1 0000              ??_spiReceiveWait 0070                    _OSCCONbits 008F  
